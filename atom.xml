<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>临渊羡鱼</title>
  
  
  <link href="https://boneink.github.io/atom.xml" rel="self"/>
  
  <link href="https://boneink.github.io/"/>
  <updated>2022-08-23T04:00:00.000Z</updated>
  <id>https://boneink.github.io/</id>
  
  <author>
    <name>BoneInk</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>WhiteRabbitTracke项目运行和问题</title>
    <link href="https://boneink.github.io/2022/08/23/WhiteRabbitTracker%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C%E5%92%8C%E9%97%AE%E9%A2%98/"/>
    <id>https://boneink.github.io/2022/08/23/WhiteRabbitTracker%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C%E5%92%8C%E9%97%AE%E9%A2%98/</id>
    <published>2022-08-23T04:00:00.000Z</published>
    <updated>2022-08-23T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WhiteRabbitTracke项目运行和问题"><a href="#WhiteRabbitTracke项目运行和问题" class="headerlink" title="WhiteRabbitTracke项目运行和问题"></a>WhiteRabbitTracke项目运行和问题</h2><hr><h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><ul><li><p>虚拟机镜像选择：</p><p>编译阶段使用Windows 10 x86 1709及之后的镜像。</p><p>运行阶段使用Windows 7 x86 sp1。</p></li><li><p>拉取项目：</p><p>采用git指令直接拉取包含子项目在内的所有内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --recursive https://github.com/AndreaNaspi/WhiteRabbitTracker.githttps://github.com/AndreaNaspi/WhiteRabbitTracker.git</span><br></pre></td></tr></table></figure><p>由于网络原因，可能无法拉取，因此可以手动下载解压：</p><p>主项目：<a href="https://github.com/AndreaNaspi/WhiteRabbitTracker">GitHub - AndreaNaspi&#x2F;WhiteRabbitTracker: WhiteRabbitTracker: Analyzing malware evasions with information flow tracking</a></p><p>子项目：<a href="https://github.com/zyantific/zydis/tree/564f0b843ca28b7b9b29dabfc2da1ae6abc9fee9">GitHub - zyantific&#x2F;zydis at 564f0b843ca28b7b9b29dabfc2da1ae6abc9fee9</a></p><p>zydis的子项目：<a href="https://github.com/zyantific/zycore-c/tree/0c372cdefe799e99812c008a0b74537bfa5fe077">GitHub - zyantific&#x2F;zycore-c at 0c372cdefe799e99812c008a0b74537bfa5fe077</a></p><p>之后将zydis放置于<code>WhiteRabbitTracker/deps/</code>下，将zycore放置于<code>WhiteRabbitTracker/deps/zydis/dependencies/</code>下即可。</p></li><li><p>配置相关环境：</p><p>虽然zydis号称几乎不需要任何额外的库，但是在编译时一些基础的工具时必要的。</p><p>安装以下工具：<code>Cmake</code>,<code>Visual Studio x86 2019</code>(2017也可以，对应的SDK和WDK最好要与之对应)，visual studio 2019对应的<code>SDK</code>和<code>WDK</code>（也可以不对应，但是SDK和WDK版本一定要一致，且一定要对应Windows 10 1709之后的版本，同时SDK安装时后会提示安装对应的Visual Studio扩展，一定要记得安装，否则VS无法检测到对应的WDK），额外安装<code>WDK 8.1</code>。</p><p>下载<code>Intel Pin v3.15</code>压缩文件，在C盘根目录创建<code>pin315</code>目录，将压缩文件内文件解压到改目录下，在环境配置中添加该目录。</p></li><li><p>编译项目：</p><p>首先要对<code>zydis</code>进行编译，用VS打开<code>zydis/msvc/</code>下的<code>Zydis.sln</code>，导入解决方案，检查所有项目的配置页的VS库版本号和WDK号是否正确或者满足，无误后，运行模式选择<code>Debug MT DLL</code>，(MT代表静态链接，会将所需的链接库都一次编译进来，否则后续可能会提示缺少必要组件，同时，最好选择用管理员权限打开VS，防止某些文件无法访问，DLL后缀代表生成DLL文件)，同时选择<code>Win32</code>，之后运行，默认会先编译Zydis和Zycore，生成必要的组件后，运行第一个示例。</p><p>完成后，会在<code>deps/zydis/msvc/bin/DebugX86</code>下找到<code>WhiteRabbitTracker</code>需要的<code>Zydis.dll</code>, <code>Zycore.dll</code>, <code>Zydis.lib</code> 和 <code>Zycore.li</code>，这代表编译没有问题。</p><p>同样的，用VS2019打开<code>WhiteRabbitTracker/solution.sln</code>,会提示升级库，WDK选择8.1。</p><p>如果编译提示找不到某些库，那就是WDK之类的地址没有对，修改根目录下的<code>Locals.props</code>，由于使用的是32位系统，因此不存在<code>Program Files (x86)</code>文件夹，仅有<code>Program Files</code>文件夹，所以需要修改<code>WinHPath</code>标签对应的地址。</p><p>编译成功后，在<code>pin</code>的目录下，可以找到<code>WhiteRabbitTracker.dll</code>文件。通过以下指令即可实现对软件的反逃逸。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Pin315\pin.exe -t WhiteRabbitTracker32.dll [options] -- &lt;file.exe&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="运行尝试："><a href="#运行尝试：" class="headerlink" title="运行尝试："></a>运行尝试：</h4><p>最好在Windows 7 sp1 x86下运行，将前一个虚拟机中<code>pin315</code>目录复制到新的虚拟机中即可使用。</p><p>同样的，使用指令对<code>pafish.exe</code>进行反逃逸，对比直接运行<code>patfish.exe</code>的结果，成功使之将虚拟机识别为真实环境。</p><p>    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;WhiteRabbitTracke项目运行和问题&quot;&gt;&lt;a href=&quot;#WhiteRabbitTracke项目运行和问题&quot; class=&quot;headerlink&quot; title=&quot;WhiteRabbitTracke项目运行和问题&quot;&gt;&lt;/a&gt;WhiteRabbitTra</summary>
      
    
    
    
    
    <category term="软件逃逸" scheme="https://boneink.github.io/tags/%E8%BD%AF%E4%BB%B6%E9%80%83%E9%80%B8/"/>
    
    <category term="IntelPin" scheme="https://boneink.github.io/tags/IntelPin/"/>
    
    <category term="恶意软件检测" scheme="https://boneink.github.io/tags/%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E6%A3%80%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>一元多项式的乘法与加法运算</title>
    <link href="https://boneink.github.io/2021/02/15/%E4%B8%80%E5%85%83%E5%A4%9A%E9%A1%B9%E5%BC%8F%E7%9A%84%E4%B9%98%E6%B3%95%E4%B8%8E%E5%8A%A0%E6%B3%95%E8%BF%90%E7%AE%97/"/>
    <id>https://boneink.github.io/2021/02/15/%E4%B8%80%E5%85%83%E5%A4%9A%E9%A1%B9%E5%BC%8F%E7%9A%84%E4%B9%98%E6%B3%95%E4%B8%8E%E5%8A%A0%E6%B3%95%E8%BF%90%E7%AE%97/</id>
    <published>2021-02-15T04:00:00.000Z</published>
    <updated>2021-02-15T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一元多项式的乘法与加法运算"><a href="#一元多项式的乘法与加法运算" class="headerlink" title="一元多项式的乘法与加法运算"></a>一元多项式的乘法与加法运算</h2><p> 来自PTA平台的一道算法题：</p><p>设计函数分别求两个一元多项式的乘积与和。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入分2行，每行分别先给出多项式非零项的个数，再以指数递降方式输入一个多项式非零项系数和指数（绝对值均为不超过1000的整数）。数字间以空格分隔。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出分2行，分别以指数递降方式输出乘积多项式以及和多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。零多项式应输出<code>0 0</code>。</p><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 3 4 -5 2  6 1  -2 0</span><br><span class="line">3 5 20  -7 4  3 1</span><br></pre></td></tr></table></figure><h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">15 24 -25 22 30 21 -10 20 -21 8 35 6 -33 5 14 4 -15 3 18 2 -6 1</span><br><span class="line">5 20 -4 4 -5 2 9 1 -2 0</span><br></pre></td></tr></table></figure><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>个人倾向于使用java来解题，毕竟不用涉及指针之类的。</p><p>开始想的是采用HashMap进行键值对映射，将指数作为key值，系数作为对应的value，相对来说很容易实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        Map&lt;Integer, Integer&gt; item1 = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n1; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">x1</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">y1</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            item1.put(y1, x1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">n2</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        Map&lt;Integer, Integer&gt; item2 = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n2; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">x2</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">y2</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            item2.put(y2, x2);</span><br><span class="line">        &#125;</span><br><span class="line">        Map&lt;Integer, Integer&gt; resMul = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, Integer&gt; entry1 : item1.entrySet()) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Map.Entry&lt;Integer, Integer&gt; entry2 : item2.entrySet()) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">reKeyMul</span> <span class="operator">=</span> entry1.getKey() + entry2.getKey();</span><br><span class="line">                <span class="type">int</span> <span class="variable">reValueMul</span> <span class="operator">=</span> entry1.getValue() * entry2.getValue();</span><br><span class="line">                <span class="keyword">if</span> (reValueMul != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (resMul.get(reKeyMul) != <span class="literal">null</span>) &#123;</span><br><span class="line">                        reValueMul += resMul.get(reKeyMul);</span><br><span class="line">                    &#125;</span><br><span class="line">                    resMul.put(reKeyMul, reValueMul);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        Map&lt;Integer, Integer&gt; resAdd = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Map&lt;Integer, Integer&gt; temp = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        temp.putAll(item2);</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, Integer&gt; entry : item1.entrySet()) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">key</span> <span class="operator">=</span> entry.getKey();</span><br><span class="line">            <span class="comment">//resAdd.put(key, entry.getValue());</span></span><br><span class="line">            <span class="type">int</span> reAdd;</span><br><span class="line">            <span class="keyword">if</span> (temp.get(key) != <span class="literal">null</span>) &#123;</span><br><span class="line">                reAdd = entry.getValue() + temp.get(key);</span><br><span class="line">                temp.remove(key);</span><br><span class="line">            &#125; <span class="keyword">else</span> reAdd = entry.getValue();</span><br><span class="line">            <span class="keyword">if</span> (reAdd != <span class="number">0</span>)</span><br><span class="line">                resAdd.put(key, reAdd);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, Integer&gt; entry : temp.entrySet()) &#123;</span><br><span class="line">            resAdd.put(entry.getKey(), entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (resMul.size() == <span class="number">0</span>) System.out.println(<span class="string">&quot;0 0&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            resMul.entrySet().stream().sorted((e1, e2) -&gt; e2.getKey().compareTo(e1.getKey())).forEach(e -&gt; System.out.print(e.getValue() + <span class="string">&quot; &quot;</span> + e.getKey() + <span class="string">&quot; &quot;</span>));</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (resAdd.size() == <span class="number">0</span>) System.out.println(<span class="string">&quot;0 0&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            resAdd.entrySet().stream().sorted((e1, e2) -&gt; e2.getKey().compareTo(e1.getKey()));</span><br><span class="line">           Iterator&lt;Map.Entry&lt;Integer,Integer&gt;&gt; iterator=resAdd.entrySet().iterator();</span><br><span class="line">           Map.Entry&lt;Integer,Integer&gt; entry=iterator.next();</span><br><span class="line">           System.out.print(entry.getValue()+<span class="string">&quot; &quot;</span>+entry.getKey());</span><br><span class="line">           <span class="comment">//for( key:resAdd.keySet())</span></span><br><span class="line"><span class="comment">//            //Iterator&lt;Map.Entry&lt;Integer,Integer&gt;&gt; iterator=resAdd.keySet().iterator();</span></span><br><span class="line"><span class="comment">//            Map.Entry&lt;Integer,Integer&gt; key=iterator.next();</span></span><br><span class="line"><span class="comment">//            System.out.print(key.get);</span></span><br><span class="line">            <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">                entry=iterator.next();</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>+entry.getValue()+<span class="string">&quot; &quot;</span>+entry.getKey());</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在自己的计算机上运行sample没有问题，遂丢到平台查看效果。果然不出所料，结果全部超时，这就意味着要采取更加基础和效率的方式进行。</p><p>采取数组方式记录结果，通过角标表示指数，已知指数绝对值大小不超过1000，即用指数+1000作为角标即可，对应的位置存储系数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Item</span> &#123;</span><br><span class="line">        <span class="type">int</span> y;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">Item</span><span class="params">(<span class="type">int</span> y, <span class="type">int</span> x)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.y = y;</span><br><span class="line">            <span class="built_in">this</span>.x = x;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getY</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setY</span><span class="params">(<span class="type">int</span> y)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.y = y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getX</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> x;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setX</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.x = x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        <span class="comment">//Map&lt;Integer, Integer&gt; item1 = new HashMap&lt;&gt;();</span></span><br><span class="line">        Item[] items1 = <span class="keyword">new</span> <span class="title class_">Item</span>[n1];</span><br><span class="line">        <span class="type">int</span>[] resSum=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2005</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n1; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">x1</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">y1</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            items1[i]=<span class="keyword">new</span> <span class="title class_">Item</span>(y1,x1);</span><br><span class="line">            resSum[y1+<span class="number">1000</span>]+=x1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">n2</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        Item[] items2 = <span class="keyword">new</span> <span class="title class_">Item</span>[n2];</span><br><span class="line">       <span class="comment">// Map&lt;Integer, Integer&gt; items2 = new HashMap&lt;&gt;();</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n2; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">x2</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">y2</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            items2[i]=<span class="keyword">new</span> <span class="title class_">Item</span>(y2,x2);</span><br><span class="line">            resSum[y2+<span class="number">1000</span>]+=x2;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] resMul=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">4010</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n1;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n2;j++)&#123;</span><br><span class="line">                resMul[items1[i].getY()+items2[j].getY()+<span class="number">1000</span>]+=items1[i].getX()*items2[j].getX();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">4009</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(resMul[i]!=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(flag!=<span class="number">0</span>)</span><br><span class="line">                    System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    flag=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.print(resMul[i]+<span class="string">&quot; &quot;</span>+(i-<span class="number">1000</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>)System.out.print(<span class="string">&quot;0 0&quot;</span>);</span><br><span class="line">        System.out.println();</span><br><span class="line">        flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2004</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(resSum[i]!=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(flag!=<span class="number">0</span>)</span><br><span class="line">                    System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    flag=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.print(resSum[i]+<span class="string">&quot; &quot;</span>+(i-<span class="number">1000</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>)System.out.print(<span class="string">&quot;0 0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一元多项式的乘法与加法运算&quot;&gt;&lt;a href=&quot;#一元多项式的乘法与加法运算&quot; class=&quot;headerlink&quot; title=&quot;一元多项式的乘法与加法运算&quot;&gt;&lt;/a&gt;一元多项式的乘法与加法运算&lt;/h2&gt;&lt;p&gt; 来自PTA平台的一道算法题：&lt;/p&gt;
&lt;p&gt;设计函</summary>
      
    
    
    
    
    <category term="Java" scheme="https://boneink.github.io/tags/Java/"/>
    
    <category term="算法练习" scheme="https://boneink.github.io/tags/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0/"/>
    
    <category term="PTA" scheme="https://boneink.github.io/tags/PTA/"/>
    
  </entry>
  
  <entry>
    <title>从“马宝国”看泛娱乐化</title>
    <link href="https://boneink.github.io/2020/12/01/%E6%97%A5%E8%AE%B0-%E4%BB%8E%E2%80%9C%E9%A9%AC%E5%AE%9D%E5%9B%BD%E2%80%9D%E7%9C%8B%E6%B3%9B%E5%A8%B1%E4%B9%90%E5%8C%96/"/>
    <id>https://boneink.github.io/2020/12/01/%E6%97%A5%E8%AE%B0-%E4%BB%8E%E2%80%9C%E9%A9%AC%E5%AE%9D%E5%9B%BD%E2%80%9D%E7%9C%8B%E6%B3%9B%E5%A8%B1%E4%B9%90%E5%8C%96/</id>
    <published>2020-11-30T21:50:00.000Z</published>
    <updated>2020-11-30T21:50:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="深夜小记"><a href="#深夜小记" class="headerlink" title="深夜小记"></a>深夜小记</h2><hr><p>“马宝国”其人其事，在网上流传已成烂梗，原以为只是老骗子一个，除去几句翻来覆去的“名人语录”，便也无他罢了。前几日竟见有媒体专访，乃至导演邀约，评论区亦有“路人”为之开脱，可说是魔幻一般的现实。<br>于是乎便有了“《人民日报》揭批马保国闹剧”一回，看来上头是要警惕泛娱乐化这一趋势。而除去《人民日报》“二流报纸”本质，单就马保国其人，本质上骗子一枚，烂梗一个，并无可取之处。<br>大家玩一玩梗，笑一笑他，这叫适度。<br>可有人因此将玩梗的心情移情到其人本身，说些“他还是个七八十的老爷爷，能这样很不容易了”，“他至少给我带来了欢乐”，“他也就只是个骗子”之类的话，这叫自作多情。<br>他现在七八十，可以想象行骗了多久，又有多少人受骗。为老而不尊，实为老贼。<br>而给我们带来欢乐的，是那些辛苦的视频制作者，而不是他。以此为其脱罪，“窃他人之果”，实为匪盗。<br>如果没有这些恶搞视频，那我们又会如何看待此人，这是一个有趣的事情。我们现在因为一个无意间的恶搞，想要轻易原谅一个老贼，甚至还允许他通过流量骗到更多的钱。那未来一大盗，一土匪，一恶魔，亦可通过一段视频，轻易获得谅解。见微而知著，实为大患。<br>强大的国家不怕几粒“老鼠屎”，怕的是大家都开始喜欢尝“老鼠屎”。<br>文化娱乐，既要松绑，又要警惕。<br> <img src="http://boneink.life/img/diary/natu.png"  align=center /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;深夜小记&quot;&gt;&lt;a href=&quot;#深夜小记&quot; class=&quot;headerlink&quot; title=&quot;深夜小记&quot;&gt;&lt;/a&gt;深夜小记&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;“马宝国”其人其事，在网上流传已成烂梗，原以为只是老骗子一个，除去几句翻来覆去的“名人语录”，便也无他罢了。前几日</summary>
      
    
    
    
    
    <category term="日记" scheme="https://boneink.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>毕业设计《三国演义》在线统计与分析系统</title>
    <link href="https://boneink.github.io/2020/05/23/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1-%E3%80%8A%E4%B8%89%E5%9B%BD%E6%BC%94%E4%B9%89%E3%80%8B%E5%9C%A8%E7%BA%BF%E7%BB%9F%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/"/>
    <id>https://boneink.github.io/2020/05/23/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1-%E3%80%8A%E4%B8%89%E5%9B%BD%E6%BC%94%E4%B9%89%E3%80%8B%E5%9C%A8%E7%BA%BF%E7%BB%9F%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/</id>
    <published>2020-05-23T04:00:00.000Z</published>
    <updated>2020-05-23T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="毕业设计《三国演义》在线设计与分析系统"><a href="#毕业设计《三国演义》在线设计与分析系统" class="headerlink" title="毕业设计《三国演义》在线设计与分析系统"></a>毕业设计《三国演义》在线设计与分析系统</h2><blockquote><p>项目基于 Spring MVC框架，前端使用了Bootstrap和jQuery进行页面设计，使用Mybatis进行sql连接，分词处理使用了开源的Jieba分词库，数据的图表展示使用了EChart进行处理，另外通讯用的是tomcat。<br>项目地址：<a href="https://github.com/BoneInk/RTK-Analysis-System">https://github.com/BoneInk/RTK-Analysis-System</a></p></blockquote><p>记录在这个项目的编写过程中，自己遇到的一些难点和坑点：</p><h3 id="Jieba分词库的选择和使用"><a href="#Jieba分词库的选择和使用" class="headerlink" title="Jieba分词库的选择和使用"></a>Jieba分词库的选择和使用</h3><p>作为一个JavaWeb的项目，直接使用Java版的Jieba库莫过于最舒服的事情，但是自己最初蠢了，试图将Jieba库的源码直接复制进自己的项目中，成功调试出一堆bug。<br>正确的操作：将源代码在IDEA中打开后，导出为jar包，在自己的JavaWeb项目中导入lib中即可调用。</p><h3 id="注册登录弹窗和注册时的用户名可用性实时提醒"><a href="#注册登录弹窗和注册时的用户名可用性实时提醒" class="headerlink" title="注册登录弹窗和注册时的用户名可用性实时提醒"></a>注册登录弹窗和注册时的用户名可用性实时提醒</h3><p>之前大三刚上手时就已经学到了如何实现弹窗，但是作为一个难点，还是要稍微圈起来记一下。<br>在自己的登录页添加如下代码，作为基础框架：</p><pre><code><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal fade&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myModal&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-dialog&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-content&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></code></pre><p>再添加如下代码作为调用弹窗的按钮：<br>    <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fp-btn&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">href</span>=<span class="string">&quot;/html/login.html&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;tooltip&quot;</span> <span class="attr">data-placement</span>=<span class="string">&quot;buttom&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;#myModal&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;login btn-fp&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">href</span>=<span class="string">&quot;/html/regis.html&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;tooltip&quot;</span> <span class="attr">data-placement</span>=<span class="string">&quot;buttom&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;#myModal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;register btn-fp&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>弹出的注册窗口代码：</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-title&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span> <span class="attr">id</span>=<span class="string">&quot;regis&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名(必填)&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;ajax&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码(必填)&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入邮箱(必填)&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text-left&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-lg&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #418a72;color: white&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点击我获取验证码&quot;</span> <span class="attr">id</span>=<span class="string">&quot;valiDate&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;change()&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;validate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入验证码&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text-right&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>  <span class="attr">style</span>=<span class="string">&quot;background-color: #498a5d;color: white&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;checkForm1()&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn bg-danger&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #8a1843;color: white&quot;</span> <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此处需要使用jQuery Ajax验证用户名的可用性：</p><pre><code><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">$(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&quot;#name&quot;</span>).<span class="title function_">blur</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;<span class="comment">//按下“name”按键触发</span></span><br><span class="line">        $.<span class="title function_">post</span>(<span class="string">&quot;/user/isValidName&quot;</span>, &#123;<span class="comment">//通过POST方法调用指定地址的Controller方法 or jsp页面 or servlet</span></span><br><span class="line">                <span class="attr">name</span>: $(<span class="variable language_">this</span>).<span class="title function_">val</span>(),<span class="comment">//发送的参数</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">function</span> (<span class="params">data</span>) &#123;<span class="comment">//返回后调用该方法</span></span><br><span class="line">                <span class="keyword">if</span> (data.<span class="property">res</span> == <span class="string">&quot;no&quot;</span>) &#123;</span><br><span class="line">                    $(<span class="string">&quot;#ajax&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;用户名已存在！&quot;</span>);</span><br><span class="line">                    $(<span class="variable language_">this</span>).<span class="title function_">select</span>();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $(<span class="string">&quot;#ajax&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;用户名可用&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="string">&quot;json&quot;</span>);<span class="comment">//指定返回的数据类型</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></code></pre><p>后端对应的Controller:<br>    <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/isValidName&quot;, method = RequestMethod.POST)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="meta">@ResponseBody</span></span><br><span class="line">    JSON <span class="title function_">isValidName</span><span class="params">(<span class="meta">@Param(&quot;name&quot;)</span> String name)</span> &#123;</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">json</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();<span class="comment">//生成json对象</span></span><br><span class="line">        <span class="keyword">if</span> ((User) userService.findUserByName(name) != <span class="literal">null</span>) &#123;<span class="comment">//调用方法和数据库进行数据交换</span></span><br><span class="line">            json.put(<span class="string">&quot;res&quot;</span>, <span class="string">&quot;no&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> json.put(<span class="string">&quot;res&quot;</span>, <span class="string">&quot;ok&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> json;<span class="comment">//返回json数据</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>登录页面：</p><pre><code><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-title&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span> <span class="attr">id</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text-left&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-lg&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #418a72;color: white&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点击我获取验证码&quot;</span> <span class="attr">id</span>=<span class="string">&quot;valiDate&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;change()&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;validate&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入验证码&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text-right&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #498a5d;color: white&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登陆&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;checkForm()&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn bg-danger&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #8a1843;color: white&quot;</span> <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></code></pre><p>对应的js控制代码：<br>    <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> xmlHttp;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkForm1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> form=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;regis&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span>(form.<span class="property">name</span>.<span class="property">value</span> .<span class="title function_">trim</span>()== <span class="string">&quot;&quot;</span>) &#123;<span class="comment">//判断用户名是否为空</span></span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;用户名不能为空!&quot;</span>);</span><br><span class="line">        form.<span class="property">account</span>.<span class="title function_">focus</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(form.<span class="property">password</span>.<span class="property">value</span> .<span class="title function_">trim</span>()== <span class="string">&quot;&quot;</span>) &#123;<span class="comment">//判断密码是否为空</span></span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;密码不能为空!&quot;</span>);</span><br><span class="line">        form.<span class="property">pwd</span>.<span class="title function_">focus</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($(<span class="string">&quot;#ajax&quot;</span>).<span class="title function_">text</span>()==<span class="string">&quot;用户名已存在！&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;该用户名不可用&quot;</span>);</span><br><span class="line">        form.<span class="property">pwd</span>.<span class="title function_">focus</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(form.<span class="property">validate</span>.<span class="property">value</span>!=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;valiDate&quot;</span>).<span class="property">value</span>)&#123;<span class="comment">//验证码是否正确</span></span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;验证码错误！请重新输入&quot;</span>)</span><br><span class="line">        form.<span class="property">validate</span>.<span class="title function_">focus</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    form.<span class="property">action</span>=<span class="string">&quot;/user/addUser&quot;</span>;</span><br><span class="line">    form.<span class="property">method</span>=<span class="string">&quot;post&quot;</span>;</span><br><span class="line">    form.<span class="title function_">submit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getCode</span>(<span class="params">n</span>) &#123;<span class="comment">//生成验证码的数字</span></span><br><span class="line">    <span class="keyword">var</span> all=<span class="string">&quot;azxcvbnmsdfghjklqwertyuiopZXCVBNMASDFGHJKLQWERTYUIOP0123456789&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> b=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> index=<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">62</span>);<span class="comment">//从这62个字母或数字中取一个</span></span><br><span class="line">        b+=all.<span class="title function_">charAt</span>(index);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">change</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;valiDate&quot;</span>).<span class="property">value</span>=<span class="title function_">getCode</span>(<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkForm</span>(<span class="params"></span>) &#123;<span class="comment">//检查登陆界面的表单是否符合标准</span></span><br><span class="line">    <span class="keyword">var</span> form=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;login&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span>(form.<span class="property">name</span>.<span class="property">value</span> .<span class="title function_">trim</span>()== <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;用户名不能为空!&quot;</span>);</span><br><span class="line">        form.<span class="property">id</span>.<span class="title function_">focus</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(form.<span class="property">password</span>.<span class="property">value</span>.<span class="title function_">trim</span>() == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;密码不能为空!&quot;</span>);</span><br><span class="line">        form.<span class="property">pwd</span>.<span class="title function_">focus</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(form.<span class="property">validate</span>.<span class="property">value</span>!=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;valiDate&quot;</span>).<span class="property">value</span>)&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;验证码错误！请重新输入&quot;</span>)</span><br><span class="line">        form.<span class="property">validate</span>.<span class="title function_">focus</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    form.<span class="property">action</span>=<span class="string">&quot;/user/findUser&quot;</span>;</span><br><span class="line">    form.<span class="property">method</span>=<span class="string">&quot;post&quot;</span>;</span><br><span class="line">    form.<span class="title function_">submit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="文件上传和读取"><a href="#文件上传和读取" class="headerlink" title="文件上传和读取"></a>文件上传和读取</h3><p>文件上传需要使用<code>commons-io-2.6.jar</code>和<code>commons-fileupload-1.4.jar</code>两个包，然后在文件提交时，标注文件上传类型为’file’。<br>    <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/UploadServlet&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                            或上传自定义文档：</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;txt&quot;</span> <span class="attr">style</span>=<span class="string">&quot;float:left;width: 150px&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;确认&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn-sgst&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: auto&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;btn-sgst&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: auto&quot;</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>之后在接收的servlet中，进行文件的临时存放和读取：</p><pre><code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">    <span class="type">DiskFileItemFactory</span> <span class="variable">sf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DiskFileItemFactory</span>();<span class="comment">//实例化磁盘被文件列表工厂</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> request.getServletContext().getRealPath(<span class="string">&quot;/upload&quot;</span>);<span class="comment">//得到上传文件的存放目录</span></span><br><span class="line">    sf.setRepository(<span class="keyword">new</span> <span class="title class_">File</span>(path));<span class="comment">//设置文件存放目录</span></span><br><span class="line">    sf.setSizeThreshold(<span class="number">1024</span> * <span class="number">1024</span>);<span class="comment">//设置文件上传小于1M放在内存中</span></span><br><span class="line">    <span class="type">ServletFileUpload</span> <span class="variable">sfu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServletFileUpload</span>(sf);</span><br><span class="line">    <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) session.getAttribute(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        List&lt;FileItem&gt; lst = sfu.parseRequest(request);<span class="comment">//得到request中所有的元素</span></span><br><span class="line">        <span class="keyword">for</span> (FileItem fileItem : lst) &#123;</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(fileItem.getInputStream(), <span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">            <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            ArrayList&lt;String&gt; arrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="keyword">while</span> ((line = br.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                arrayList.add(line);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            session.setAttribute(<span class="string">&quot;content&quot;</span>, arrayList);</span><br><span class="line">            fileItem.delete();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></code></pre><h3 id="关键词对照统计及后续的排序："><a href="#关键词对照统计及后续的排序：" class="headerlink" title="关键词对照统计及后续的排序："></a>关键词对照统计及后续的排序：</h3><p>因为中文的习惯、各种官职、别称的存在以及Jieba分词库对中文分词仍不能做到100%准确分词的情况，所以会有分割后的同义词的存在，故应先根据同义词表生成关键词的Map表，由于Map的key值唯一，故关键词的Map表按照{“别称”,”原名”}的形式存放映射关系。<br>对照统计相对简单，Jieba分词的API可以把文段内容自动切割成{“word”,”startIndex”,”endIndex”}的形式，并且封装在SegToken对象中，直接获取其中的word数据即可，之后对照关键词Map进行统计，统计结果也相应的存放在Map表中，格式为{“原名”，”词频”}。<br>由于Map并不存在顺序一说，故只能先将其转换为List后，调用方法进行排序：<br>    <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Map.Entry&lt;String, Integer&gt;&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Map.Entry&lt;String, Integer&gt;&gt;(map.entrySet()); <span class="comment">//转换为list</span></span><br><span class="line">      Collections.sort(list, <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;Map.Entry&lt;String, Integer&gt;&gt;() &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Map.Entry&lt;String, Integer&gt; o1, Map.Entry&lt;String, Integer&gt; o2)</span> &#123;</span><br><span class="line">              <span class="keyword">return</span> o2.getValue().compareTo(o1.getValue());</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure><br>值得一提的是，此时的List内的单位元素，是一个个的Map的实体（疑似套娃）。</p><h3 id="合并章节时实现两级选项联动"><a href="#合并章节时实现两级选项联动" class="headerlink" title="合并章节时实现两级选项联动"></a>合并章节时实现两级选项联动</h3><p>目的是为了实现前一个选项选择完毕后，后一个选项给从前一个选项的数值到最大章节数的选项。此处考虑到并不需要过多数据交互，仅是一个简单的判断就行，所以仅使用DOM即可实现。<br>    html的布局代码如下：<br>    <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">           合并分析：</span><br><span class="line">       <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">       起始-&gt;<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;start&quot;</span> <span class="attr">name</span>=<span class="string">&quot;start&quot;</span> <span class="attr">onchange</span>=<span class="string">&quot;cChange()&quot;</span>&gt;</span>&lt;%</span><br><span class="line">       for (int p = 2; p &lt; resList.size(); p++) &#123;</span><br><span class="line">   %&gt;</span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&lt;%=p%&gt;&quot;</span>&gt;</span>&lt;%=p%&gt;</span><br><span class="line">       <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">       &lt;%</span><br><span class="line">           &#125;</span><br><span class="line">       %&gt;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">       -&gt;<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;to&quot;</span> <span class="attr">name</span>=<span class="string">&quot;to&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span>-&gt;结尾</span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;确认&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><br>此处涉及的逻辑有，前一个选项选择完毕后，后一个选择先清空所有选项，再重新增加符合要求的选项。因为相对于一般的组件内容改动，此处的’select’标签可调用的方法不同较多，因此花了很多时间在上面，以前使用的子节点和父母节点的方法貌似在这里无法生效。因此，查了很多地方才发现，其实方法很简单：<br>    <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;selectid&quot;</span>).<span class="property">options</span>.<span class="property">length</span> = <span class="number">0</span>;<span class="comment">//方法一</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">formName</span>.<span class="property">selectName</span>.<span class="property">options</span>.<span class="property">length</span> = <span class="number">0</span>;<span class="comment">//方法二</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;selectid&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;&quot;</span>;<span class="comment">//方法三</span></span><br></pre></td></tr></table></figure><br>我这里选择了这三种之外的一种方法：<br>    <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">cChange</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;start&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> tt = t.<span class="property">options</span>[t.<span class="property">selectedIndex</span>].<span class="property">value</span>;</span><br><span class="line">    <span class="keyword">var</span> opp = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;to&#x27;</span>);</span><br><span class="line">    <span class="keyword">while</span> (opp.<span class="property">options</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        opp.<span class="title function_">removeChild</span>(opp.<span class="property">options</span>[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> max = &lt;%=resList.<span class="title function_">size</span>()%&gt;;</span><br><span class="line">    <span class="keyword">var</span> i = tt;</span><br><span class="line">    i++;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt;= max; i++) &#123;</span><br><span class="line">        opp.<span class="title function_">add</span>(<span class="keyword">new</span> <span class="title class_">Option</span>(i, i));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h3 id="数据的图形化展示"><a href="#数据的图形化展示" class="headerlink" title="数据的图形化展示"></a>数据的图形化展示</h3><p>此处@王小雨同学，不愧是做了一年前端的，直接指向EChart，官方示例很容易懂，连各个组件都能定制化下载，节约了不少空间（不过即便如此，调用起来也因为其js的代码量过大而出现卡顿的情况。ps：绝对不是因为我电脑性能不够23333333。）<br>简单的直接上手即可处理完毕，此处随便贴一个柱形图的调用代码：<br>先添加一个空白的div:<br>    <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%;height:1500px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>//此处的div大小决定了生成图表的最大值，调整这个的大小远比调整grid的大小来的实用</span><br></pre></td></tr></table></figure><br>调用的js：<br>    <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="keyword">var</span> myChart = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;main&#x27;</span>));<span class="comment">//此处选择要使用的div</span></span><br><span class="line">    <span class="keyword">var</span> option = &#123;</span><br><span class="line">        <span class="attr">title</span>: &#123;</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;全文分析结果&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">grid</span>: &#123;<span class="comment">//改标签可进行图表的大小调整，但真正来讲，还得看依附的div的大小</span></span><br><span class="line">            <span class="attr">left</span>: <span class="string">&#x27;3%&#x27;</span>,</span><br><span class="line">            <span class="attr">right</span>: <span class="string">&#x27;4%&#x27;</span>,</span><br><span class="line">            <span class="attr">bottom</span>: <span class="string">&#x27;3%&#x27;</span>,</span><br><span class="line">            <span class="attr">containLabel</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">tooltip</span>: &#123;</span><br><span class="line">            <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span>,</span><br><span class="line">            <span class="attr">axisPointer</span>: &#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;shadow&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">xAxis</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">yAxis</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">            <span class="attr">inverse</span>:<span class="literal">true</span>,<span class="comment">//这句可将数据排序反转，主要为了解决竖向显示时小的数据在前边的问题</span></span><br><span class="line">            <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">                <span class="attr">interval</span>: <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">data</span>: [&lt;%<span class="comment">//在哪个轴显示自变量，就在哪个轴里调用数据名</span></span><br><span class="line">        int m=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(key.<span class="title function_">equals</span>(<span class="string">&quot;noKey&quot;</span>)) m=<span class="number">100</span>;</span><br><span class="line">        <span class="keyword">else</span> m=list.<span class="title function_">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(int i=<span class="number">0</span>;i&lt;m&amp;&amp;i&lt;list.<span class="title function_">size</span>();i++)&#123;</span><br><span class="line">            <span class="title class_">Map</span>.<span class="property">Entry</span>&lt;<span class="title class_">String</span> ,<span class="title class_">Integer</span>&gt; mapping=list.<span class="title function_">get</span>(i);</span><br><span class="line">        %&gt;<span class="string">&quot;&lt;%=mapping.getKey()%&gt;&quot;</span>,</span><br><span class="line">                &lt;%</span><br><span class="line">                &#125;</span><br><span class="line">                %&gt;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">series</span>: [&#123;<span class="comment">//此处导入数据</span></span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;词频&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: [&lt;%</span><br><span class="line">        <span class="keyword">for</span>(int i=<span class="number">0</span>;i&lt;m&amp;&amp;i&lt;list.<span class="title function_">size</span>();i++)&#123;</span><br><span class="line">            <span class="title class_">Map</span>.<span class="property">Entry</span>&lt;<span class="title class_">String</span> ,<span class="title class_">Integer</span>&gt; mapping=list.<span class="title function_">get</span>(i);</span><br><span class="line">        %&gt;<span class="string">&quot;&lt;%=mapping.getValue()%&gt;&quot;</span>,</span><br><span class="line">                &lt;%</span><br><span class="line">                &#125;</span><br><span class="line">                %&gt;</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">                <span class="attr">normal</span>: &#123;</span><br><span class="line">                    <span class="attr">color</span>: <span class="keyword">function</span> (<span class="params">params</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> colorList = [<span class="string">&#x27;#c23531&#x27;</span>, <span class="string">&#x27;#2f4554&#x27;</span>, <span class="string">&#x27;#61a0a8&#x27;</span>, <span class="string">&#x27;#d48265&#x27;</span>, <span class="string">&#x27;#91c7ae&#x27;</span>, <span class="string">&#x27;#749f83&#x27;</span>, <span class="string">&#x27;#ca8622&#x27;</span>, <span class="string">&#x27;#bda29a&#x27;</span>, <span class="string">&#x27;#6e7074&#x27;</span>, <span class="string">&#x27;#546570&#x27;</span>, <span class="string">&#x27;#c4ccd3&#x27;</span>];</span><br><span class="line">                        <span class="keyword">var</span> index;</span><br><span class="line">                        <span class="comment">//给大于颜色数量的柱体添加循环颜色的判断</span></span><br><span class="line">                        <span class="keyword">if</span> (params.<span class="property">dataIndex</span> &gt;= colorList.<span class="property">length</span>) &#123;</span><br><span class="line">                            index = params.<span class="property">dataIndex</span> % colorList.<span class="property">length</span>;</span><br><span class="line">                            <span class="keyword">return</span> colorList[index];</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">return</span> colorList[params.<span class="property">dataIndex</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">label</span>: &#123;</span><br><span class="line">                <span class="attr">show</span>: <span class="literal">true</span>, <span class="comment">//开启显示</span></span><br><span class="line">                <span class="attr">position</span>: <span class="string">&#x27;right&#x27;</span>, <span class="comment">//在上方显示</span></span><br><span class="line">                <span class="attr">textStyle</span>: &#123; <span class="comment">//数值样式</span></span><br><span class="line">                    <span class="attr">color</span>: <span class="string">&#x27;black&#x27;</span>,</span><br><span class="line">                    <span class="attr">fontSize</span>: <span class="number">13</span>,</span><br><span class="line">                    <span class="attr">fontWeight</span>: <span class="number">200</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;;</span><br><span class="line">    myChart.<span class="title function_">setOption</span>(option);</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">onresize</span> = myChart.<span class="property">resize</span>;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><br>因为自己的图表需要根据后台传来的数据生成，因此嵌入了不少Java代码，但整体上还是能看到各个必要的组件的调用格式的，必要部分已经做了注释。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以下为无关废话：<br>作为自己真正意义上的第一次完全独立完成一个较大且较为完备的项目，至少目前达到了1：能用，2：能看，3：代码不那么乱的程度，从整体的开发流程来看，前期因为了解的少，以至于花了很多时间在看各种文档和论文上，最后真正实施起来，其实花的时间很少，也就两周不到2333333，中间还熬了不少夜。值得一提的是，像登陆注册系统和合并章节分词统计结果这种功能，我开始并没有想做，因为不能说你让我做我就做，我说，那我必须要先试一下……</p><blockquote><p>（真实内心os）你看，我都用了Spring MVC框架了，不得来个数据库看看嘛，我都用数据库了，不得来个Mybatis省一下力气嘛，而且看起来还更整洁好看。</p></blockquote><p>然后就跟老师讲觉得自己做的好像还不够的样子（我也不知道哪来的精力这么讲）。</p><blockquote><p>老师：你做个每章节最高词频的统计表出来，然后再做个合并章节统计的功能出来是不是更好点？<br>我：嗯？嗯。（自己说的胡话，怎么也要吞下去）</p></blockquote><p>总的来说，自己还是熬了两夜做出来了老师要做的这个（顺便把自己还没填完的自定义上传文本的坑搞定了），成就感满满。<br>话说我还是很喜欢《三国演义》的，这种古人写的战争爽文，百看不厌好嘛。虽然自己项目做完第一时间做的是丢进去一篇《金瓶梅》测试了下自定义上传文本的效果。（主要是脑海中无限回想郭德纲那句：老爷子爱看书啊，书房里满满的三架子，各种版本的《金瓶梅》。）听说我们学校还有个教授是专门研究《金瓶梅》里的风土人情的？果然ghs才是第一生产力。<br>   &#96;&#96;&#96;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;毕业设计《三国演义》在线设计与分析系统&quot;&gt;&lt;a href=&quot;#毕业设计《三国演义》在线设计与分析系统&quot; class=&quot;headerlink&quot; title=&quot;毕业设计《三国演义》在线设计与分析系统&quot;&gt;&lt;/a&gt;毕业设计《三国演义》在线设计与分析系统&lt;/h2&gt;&lt;bloc</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="https://boneink.github.io/tags/JavaWeb/"/>
    
    <category term="jQuery" scheme="https://boneink.github.io/tags/jQuery/"/>
    
    <category term="Spring MVC" scheme="https://boneink.github.io/tags/Spring-MVC/"/>
    
    <category term="Mybatis" scheme="https://boneink.github.io/tags/Mybatis/"/>
    
    <category term="Jieba" scheme="https://boneink.github.io/tags/Jieba/"/>
    
    <category term="EChart" scheme="https://boneink.github.io/tags/EChart/"/>
    
    <category term="Sql" scheme="https://boneink.github.io/tags/Sql/"/>
    
    <category term="Bootstrap" scheme="https://boneink.github.io/tags/Bootstrap/"/>
    
    <category term="tomcat" scheme="https://boneink.github.io/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb上传文件</title>
    <link href="https://boneink.github.io/2020/05/11/JavaWeb%E7%AC%94%E8%AE%B0/"/>
    <id>https://boneink.github.io/2020/05/11/JavaWeb%E7%AC%94%E8%AE%B0/</id>
    <published>2020-05-11T04:00:00.000Z</published>
    <updated>2020-05-11T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JavaWeb上传文件"><a href="#JavaWeb上传文件" class="headerlink" title="JavaWeb上传文件"></a>JavaWeb上传文件</h2><p>前端：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>导入文本分词：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;UploadServlet&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span><span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    &lt;%--名称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;txt_name&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span>--%&gt;</span><br><span class="line">    上传文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;txt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>/&gt;</span> <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>设置Servlet：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileItem;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.disk.DiskFileItemFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.servlet.ServletFileUpload;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileUploadException;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UploadServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        DiskFileItemFactory sf= <span class="keyword">new</span> <span class="title class_">DiskFileItemFactory</span>();<span class="comment">//实例化磁盘被文件列表工厂</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> request.getRealPath(<span class="string">&quot;/upload&quot;</span>);<span class="comment">//得到上传文件的存放目录</span></span><br><span class="line">        sf.setRepository(<span class="keyword">new</span> <span class="title class_">File</span>(path));<span class="comment">//设置文件存放目录</span></span><br><span class="line">        sf.setSizeThreshold(<span class="number">1024</span>*<span class="number">1024</span>);<span class="comment">//设置文件上传小于1M放在内存中</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">rename</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;<span class="comment">//文件新生成的文件名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;<span class="comment">//文件原名称</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;<span class="comment">//普通field字段</span></span><br><span class="line">        <span class="comment">//从工厂得到servletupload文件上传类</span></span><br><span class="line">        <span class="type">ServletFileUpload</span> <span class="variable">sfu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServletFileUpload</span>(sf);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;FileItem&gt; lst = sfu.parseRequest(request);<span class="comment">//得到request中所有的元素</span></span><br><span class="line">            <span class="keyword">for</span> (FileItem fileItem : lst) &#123;</span><br><span class="line">                <span class="keyword">if</span>(fileItem.isFormField())&#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="string">&quot;name&quot;</span>.equals(fileItem.getFieldName()))&#123;</span><br><span class="line">                        name = fileItem.getString(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="comment">//获得文件名称</span></span><br><span class="line">                    fileName = fileItem.getName();</span><br><span class="line">                    fileName = fileName.substring(fileName.lastIndexOf(<span class="string">&quot;\\&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">houzhui</span> <span class="operator">=</span> fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">                    rename = UUID.randomUUID()+houzhui;</span><br><span class="line">                    fileItem.write(<span class="keyword">new</span> <span class="title class_">File</span>(path, rename));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        response.sendRedirect(<span class="string">&quot;file.jsp&quot;</span>);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：注意导入<code>commons-io-2.6.jar</code>和<code>commons-fileupload-1.4.jar</code>，以区分tomcat中同名的api。</p><p>在<code>web.xml</code>中添加servlet:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>UploadServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>UploadServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>UploadServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/UploadServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此时会出现中文文件名名乱码，在<code>doPost()</code>方法中添加如下即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">      request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;JavaWeb上传文件&quot;&gt;&lt;a href=&quot;#JavaWeb上传文件&quot; class=&quot;headerlink&quot; title=&quot;JavaWeb上传文件&quot;&gt;&lt;/a&gt;JavaWeb上传文件&lt;/h2&gt;&lt;p&gt;前端：&lt;/p&gt;
&lt;figure class=&quot;highlight h</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="https://boneink.github.io/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>Jquery ajax 笔记</title>
    <link href="https://boneink.github.io/2020/05/11/Jquery%20Ajax%20%E7%AC%94%E8%AE%B0/"/>
    <id>https://boneink.github.io/2020/05/11/Jquery%20Ajax%20%E7%AC%94%E8%AE%B0/</id>
    <published>2020-05-11T04:00:00.000Z</published>
    <updated>2020-05-11T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="jQuery-Ajax-笔记"><a href="#jQuery-Ajax-笔记" class="headerlink" title="jQuery Ajax 笔记"></a>jQuery Ajax 笔记</h2><p>实现ajax，目前有两种方法：</p><ol><li>使用JavaScript扩展对象XMLHttpRequest实现Ajax</li><li>使用JjQuery实现ajax</li></ol><p>此处学习总结jQuery ajax方法。<br>常用格式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;sentence.jsp&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">sentence</span>:sentence</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">dataType</span>:<span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">    <span class="attr">async</span>:<span class="literal">false</span>,</span><br><span class="line">    <span class="attr">success</span>:<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">error</span>:<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;false&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>关键词语法：</p><table><thead><tr><th align="left">名称</th><th align="left">值&#x2F;描述</th></tr></thead><tbody><tr><td align="left">async</td><td align="left">布尔值，表示请求是否异步处理。默认是 true。</td></tr><tr><td align="left">beforeSend(<em>xhr</em>)</td><td align="left">发送请求前运行的函数。</td></tr><tr><td align="left">cache</td><td align="left">布尔值，表示浏览器是否缓存被请求页面。默认是 true。</td></tr><tr><td align="left">complete(<em>xhr,status</em>)</td><td align="left">请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。</td></tr><tr><td align="left">contentType</td><td align="left">发送数据到服务器时所使用的内容类型。默认是：”application&#x2F;x-www-form-urlencoded”。</td></tr><tr><td align="left">context</td><td align="left">为所有 AJAX 相关的回调函数规定 “this” 值。</td></tr><tr><td align="left">data</td><td align="left">规定要发送到服务器的数据。</td></tr><tr><td align="left">dataFilter(<em>data</em>,<em>type</em>)</td><td align="left">用于处理 XMLHttpRequest 原始响应数据的函数。</td></tr><tr><td align="left">dataType</td><td align="left">预期的服务器响应的数据类型。</td></tr><tr><td align="left">error(<em>xhr,status,error</em>)</td><td align="left">如果请求失败要运行的函数。</td></tr><tr><td align="left">global</td><td align="left">布尔值，规定是否为请求触发全局 AJAX 事件处理程序。默认是 true。</td></tr><tr><td align="left">ifModified</td><td align="left">布尔值，规定是否仅在最后一次请求以来响应发生改变时才请求成功。默认是 false。</td></tr><tr><td align="left">jsonp</td><td align="left">在一个 jsonp 中重写回调函数的字符串。</td></tr><tr><td align="left">jsonpCallback</td><td align="left">在一个 jsonp 中规定回调函数的名称。</td></tr><tr><td align="left">password</td><td align="left">规定在 HTTP 访问认证请求中使用的密码。</td></tr><tr><td align="left">processData</td><td align="left">布尔值，规定通过请求发送的数据是否转换为查询字符串。默认是 true。</td></tr><tr><td align="left">scriptCharset</td><td align="left">规定请求的字符集。</td></tr><tr><td align="left">success(<em>result,status,xhr</em>)</td><td align="left">当请求成功时运行的函数。</td></tr><tr><td align="left">timeout</td><td align="left">设置本地的请求超时时间（以毫秒计）。</td></tr><tr><td align="left">traditional</td><td align="left">布尔值，规定是否使用参数序列化的传统样式。</td></tr><tr><td align="left">type</td><td align="left">规定请求的类型（GET 或 POST）。</td></tr><tr><td align="left">url</td><td align="left">规定发送请求的 URL。默认是当前页面。</td></tr><tr><td align="left">username</td><td align="left">规定在 HTTP 访问认证请求中使用的用户名。</td></tr><tr><td align="left">xhr</td><td align="left">用于创建 XMLHttpRequest 对象的函数。</td></tr></tbody></table><h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><ol><li>若url为jsp文件，通过java返回数据，则应用语句<code>request.setAttribute();</code>。</li><li>在js中可用<code>$&#123;&#125;</code>或嵌入java<code>&lt;%=%&gt;</code>取出指定名称的返回数据。 </li><li>若指定了返回数据的类型，则返回数据的类型需要与指定类型相同，否则会报错。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;jQuery-Ajax-笔记&quot;&gt;&lt;a href=&quot;#jQuery-Ajax-笔记&quot; class=&quot;headerlink&quot; title=&quot;jQuery Ajax 笔记&quot;&gt;&lt;/a&gt;jQuery Ajax 笔记&lt;/h2&gt;&lt;p&gt;实现ajax，目前有两种方法：&lt;/p&gt;
&lt;o</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="https://boneink.github.io/tags/JavaWeb/"/>
    
    <category term="jQuery" scheme="https://boneink.github.io/tags/jQuery/"/>
    
    <category term="Ajax" scheme="https://boneink.github.io/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>Python 学习笔记</title>
    <link href="https://boneink.github.io/2020/03/27/Python%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://boneink.github.io/2020/03/27/Python%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-03-27T04:00:00.000Z</published>
    <updated>2020-03-27T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Python-学习笔记"><a href="#Python-学习笔记" class="headerlink" title="Python 学习笔记"></a>Python 学习笔记</h3><blockquote><p>因毕业设计需要，学习下入门级的python基本知识。 </p></blockquote><h4 id="需要注意的数据类型"><a href="#需要注意的数据类型" class="headerlink" title="需要注意的数据类型"></a>需要注意的数据类型</h4><ul><li><p>Dic :<br>  Python包含以下函数:</p><table><thead><tr><th align="left">序号</th><th>函数及描述</th></tr></thead><tbody><tr><td align="left">1</td><td><a href="https://www.runoob.com/python/att-dictionary-cmp.html">cmp(dict1, dict2)</a><br/>比较两个字典元素。</td></tr><tr><td align="left">2</td><td><a href="https://www.runoob.com/python/att-dictionary-len.html"> len(dict)</a> <br/>计算字典元素个数，即键的总数。</td></tr><tr><td align="left">3</td><td><a href="https://www.runoob.com/python/att-dictionary-str.html"> str(dict)</a> <br/>输出字典可打印的字符串表示。</td></tr><tr><td align="left">4</td><td><a href="https://www.runoob.com/python/att-dictionary-type.html"> type(variable)</a> <br/>返回输入的变量类型，如果变量是字典就返回字典类型。</td></tr></tbody></table><p>  Python包含以下方法:</p><table><thead><tr><th align="left">序号</th><th align="left">函数及描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="https://www.runoob.com/python/att-dictionary-clear.html">dict.clear()</a> 删除字典内所有元素</td></tr><tr><td align="left">2</td><td align="left"><a href="https://www.runoob.com/python/att-dictionary-copy.html">dict.copy()</a> 返回一个字典的浅复制</td></tr><tr><td align="left">3</td><td align="left">[dict.fromkeys(seq<a href="https://www.runoob.com/python/att-dictionary-fromkeys.html">, val])</a> 创建一个新字典，以序列 seq 中元素做字典的键，val 为字典所有键对应的初始值</td></tr><tr><td align="left">4</td><td align="left"><a href="https://www.runoob.com/python/att-dictionary-get.html">dict.get(key, default&#x3D;None)</a> 返回指定键的值，如果值不在字典中返回default值</td></tr><tr><td align="left">5</td><td align="left"><a href="https://www.runoob.com/python/att-dictionary-has_key.html">dict.has_key(key)</a> 如果键在字典dict里返回true，否则返回false</td></tr><tr><td align="left">6</td><td align="left"><a href="https://www.runoob.com/python/att-dictionary-items.html">dict.items()</a> 以列表返回可遍历的(键, 值) 元组数组</td></tr><tr><td align="left">7</td><td align="left"><a href="https://www.runoob.com/python/att-dictionary-keys.html">dict.keys()</a> 以列表返回一个字典所有的键</td></tr><tr><td align="left">8</td><td align="left"><a href="https://www.runoob.com/python/att-dictionary-setdefault.html">dict.setdefault(key, default&#x3D;None)</a> 和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default</td></tr><tr><td align="left">9</td><td align="left"><a href="https://www.runoob.com/python/att-dictionary-update.html">dict.update(dict2)</a> 把字典dict2的键&#x2F;值对更新到dict里</td></tr><tr><td align="left">10</td><td align="left"><a href="https://www.runoob.com/python/att-dictionary-values.html">dict.values()</a> 以列表返回字典中的所有值</td></tr><tr><td align="left">11</td><td align="left">[pop(key<a href="https://www.runoob.com/python/python-att-dictionary-pop.html">,default])</a> 删除字典给定键 key 所对应的值，返回值为被删除的值。key值必须给出。 否则，返回default值。</td></tr><tr><td align="left">12</td><td align="left"><a href="https://www.runoob.com/python/python-att-dictionary-popitem.html">popitem()</a> 返回并删除字典中的最后一对键和值。</td></tr></tbody></table></li><li><p>List :</p><p>Python包含以下函数:</p><table><thead><tr><th align="left">序号</th><th align="left">函数</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-len.html">len(list)</a> 列表元素个数</td></tr><tr><td align="left">2</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-max.html">max(list)</a> 返回列表元素最大值</td></tr><tr><td align="left">3</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-min.html">min(list)</a> 返回列表元素最小值</td></tr><tr><td align="left">4</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-list.html">list(seq)</a> 将元组转换为列表</td></tr></tbody></table><p>Python包含以下方法:</p><table><thead><tr><th align="left">序号</th><th align="left">方法</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-append.html">list.append(obj)</a> 在列表末尾添加新的对象</td></tr><tr><td align="left">2</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-count.html">list.count(obj)</a> 统计某个元素在列表中出现的次数</td></tr><tr><td align="left">3</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-extend.html">list.extend(seq)</a> 在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）</td></tr><tr><td align="left">4</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-index.html">list.index(obj)</a> 从列表中找出某个值第一个匹配项的索引位置</td></tr><tr><td align="left">5</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-insert.html">list.insert(index, obj)</a> 将对象插入列表</td></tr><tr><td align="left">6</td><td align="left">[list.pop(<a href="https://www.runoob.com/python3/python3-att-list-pop.html">index&#x3D;-1])</a> 移除列表中的一个元素（默认最后一个元素），并且返回该元素的值</td></tr><tr><td align="left">7</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-remove.html">list.remove(obj)</a> 移除列表中某个值的第一个匹配项</td></tr><tr><td align="left">8</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-reverse.html">list.reverse()</a> 反向列表中元素</td></tr><tr><td align="left">9</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-sort.html">list.sort( key&#x3D;None, reverse&#x3D;False)</a> 对原列表进行排序</td></tr><tr><td align="left">10</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-clear.html">list.clear()</a> 清空列表</td></tr><tr><td align="left">11</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-copy.html">list.copy()</a> 复制列表</td></tr></tbody></table></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Python-学习笔记&quot;&gt;&lt;a href=&quot;#Python-学习笔记&quot; class=&quot;headerlink&quot; title=&quot;Python 学习笔记&quot;&gt;&lt;/a&gt;Python 学习笔记&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;因毕业设计需要，学习下入门级的python</summary>
      
    
    
    
    
    <category term="编程语言入门" scheme="https://boneink.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/"/>
    
    <category term="python" scheme="https://boneink.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>诸子的那些瞬间</title>
    <link href="https://boneink.github.io/2020/03/05/%E8%AF%B8%E5%AD%90%E7%9A%84%E9%82%A3%E4%BA%9B%E7%9E%AC%E9%97%B4/"/>
    <id>https://boneink.github.io/2020/03/05/%E8%AF%B8%E5%AD%90%E7%9A%84%E9%82%A3%E4%BA%9B%E7%9E%AC%E9%97%B4/</id>
    <published>2020-03-05T15:22:48.000Z</published>
    <updated>2020-03-05T15:22:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="诸子的那些瞬间"><a href="#诸子的那些瞬间" class="headerlink" title="诸子的那些瞬间"></a>诸子的那些瞬间</h2><p>鲍鹏山 著</p><hr><blockquote><p>导读<br>推开历史的窗户，中国的一个时代——春秋战国时代，天佑中华，诸子并出，百花齐放，百家争鸣，从而使我们民族的思想与智慧灿若星河、光芒万丈；而且，他们同时被誉为人类伟大的精神导师。为了巡视这一中华民族的精神高地，我们约请鲍鹏山先生为我们描述诸子的风采。鲍鹏山先生举一反三、举三反九，在“轴心时代”的世界历史大背景下，为我们描绘了老子、孔子和庄子三大师的魅力瞬间，独到的把握与精彩的叙述，使我们的阅读收获如行山阴道上。</p></blockquote><h4 id="引子：-“轴心时代”"><a href="#引子：-“轴心时代”" class="headerlink" title="引子： “轴心时代”"></a>引子： “轴心时代”</h4><p>德国，1883年，卡尔·马克思去世。<br>同年，也是德国，一位也叫卡尔的著名哲学家诞生。他就是卡尔·西奥多·雅斯贝尔斯（Karl Theodor Jaspers，1883年2月23日至1969年2月26日）。<br>1949年，新中国成立那年，他出版了《历史的起源与目标》一书，在此书中，他站在世界文化的旷野上，对旧中国的一个时代和这个时代的人物给予了极高的评价。<br>这个时代是东周的春秋战国时代。<br>雅斯贝尔斯把这个时代称之为人类文明的“轴心时代”（公元前800至公元前200年之间，尤其是公元前600至前300年间。）在这个时代，在地球上北纬30度上下,就是北纬25度至35度区间里，人类的文明精神出现了重大突破，出现了一些伟大的精神导师——古希腊有苏格拉底、柏拉图、亚里士多德，以色列有犹太教的先知们，古印度有释迦牟尼，中国有孔子、老子……<br>这种突破，是对原始文化的超越和突破，雅斯贝尔斯称之为人类“终极关怀的觉醒”。人类开始用理智的方法、道德的方式来面对这个世界，宗教开始出现。今天西方、印度、中国、伊斯兰不同的文化形态，就是由于他们各自不同的超越和突破类型。<br>如何理解雅斯贝尔斯所说的“终极关怀的觉醒”？<br>我的理解是：<br>第一，人类试图从整体上把握世界，而不是零敲碎打，个别地孤立地认识世界。同时，人类开始严肃地思考人类和宇宙的关系，司马迁所说的“究天人之际”——认识论出现。<br>第二，人类开始有了自觉，开始认识自我，认识人我关系——伦理学展开。<br>第三，人类开始认识到人是有道德使命的，即，人不仅是一个道德的存在，从而区别于一般动物；而且，人还负有建设道德世界的责任——世界观觉醒。<br>第四，人类有了明确的时间意识，开始关注人类的历史，意识到人类是一个文化的存在并且有着文化的使命和宿命，司马迁所说的“通古今之变”——历史观诞生。<br>其实，在中国，在雅斯贝尔斯所谓的轴心时代过去不到100年，汉武帝时代的一位太史令，一个大学者，一个更大学者——司马迁的父亲司马谈，就对中国的轴心时代作了深刻的总结。他的一篇专题论文《论六家要旨》，总结了轴心时代的六个重要流派的主要思想：阴阳家、儒家、墨家、名家、法家、道德家。大约再过200年，东汉的一个大学者、史学家班固，在他的《汉书·艺文志》中，在六家之外，又加了四家：纵横家、农家、杂家、小说家。于是有了“九流十家”之说。<br>其实，“九流十家”仍然没有囊括尽那个时代中国人的信仰、思想与知识，比如，兵家，医家……<br>他们是这样一些人：老子、孔子、墨子、孙子、孟子、庄子、商鞅、荀子、韩非子……<br>他们鼓吹着这样一些概念：道、德、仁、义、礼、智、信、勇、法、术、势、王道、仁政、兼爱、尚贤、大同、小康……<br>每一个概念的背后都蕴含着深刻的思想。这些思想是对整个人类文明和人类道德使命的思考。这些思考变成了文明的成果积淀下来，这些积淀最后就成了人类生存的价值观和价值基础。并且，形成了独特的民族特色。<br>“弑君三十六，亡国五十二。”——这是孔子描述的春秋时代。<br>“今夫天下之人牧，未有不嗜杀人者也。”“且王者之不作，未有疏于此时者也；民之憔悴于虐政，未有甚于此时者也。”——这是孟子对战国时代的评价。<br>春秋战国，是一个血与火的时代，是一个兴衰存亡的时代。<br>但却也是中国人精神和人格蓬蓬勃勃的时代。<br>孟子还曾这样说他的时代：“圣王不作，诸侯放恣，处士横议。”<br>圣王之权没有了，诸侯自以为王。<br>圣王之义没有了，诸子自以为是。<br>所以，这时代，两类人最活跃：诸侯和诸子。<br>诸侯争霸，诸子争鸣。<br>诸侯争夺的，是子女玉帛，土地城池， “争地以战，杀人盈野；争城以战，杀人盈城”。——孟子破口大骂：率土地而食人肉，善战者服上刑！<br>诸子争鸣的，是仁义礼法，天道人性。判天地之美，析万物之理，察古人之全。惜乎贤圣不明，道德不一，不见天地之纯，古人之大体。——庄子仰天浩叹：道术已为天下裂！<br>争霸的结果，是，天下版图尽入于秦。<br>争鸣的结果，是，天下学术终归于法。<br>结果是悲剧，过程却被历史一再回味。  </p><h4 id="1-紫气东来"><a href="#1-紫气东来" class="headerlink" title="1.紫气东来"></a>1.紫气东来</h4><p>司马谈毕竟大汉气度，他纵论六家，指点圣贤，各有褒贬，大气磅礴。<br>但是，有着黄老思想的他，对以老子为代表的道家思想给予了全面的肯定。<br>他这样说老子的道家：<br>道家无为，又曰无不为，其实易行，其辞难知。其术以虚无为本，以因循为用。无成埶，无常形，故能究万物之情。不为物先，不为物后，故能为万物主。有法无法，因时为业；有度无度，因物与合。故曰“圣人不朽，时变是守”。<br>他眼中的圣人，不是孔子，而是老子。难怪他的儿子司马迁不仅把老子写成孔子之师，还借孔子之口，称服老子为“龙”。<br>司马迁在《史记·老子韩非列传》中这样记述：<br>老子修道德，其学以自隐无名为务。居周久之，见周之衰，乃遂去。<br>以自隐无名为务，这句话有意思。因为，人须已显行迹已有名声，才有隐藏行迹埋没名声这样一层烦恼，否则，历史上漫漫而来又漫漶而去的芸芸众生何其多耶，谁又需要一门专门的学问来泯灭行迹名声。盖老子当是当代大名人，后来孔子不远数百里求教洛邑，也可印证。<br>作为周朝的档案馆馆长，见周之衰，便黯然离去。<br>离开了周，老子去哪里呢？<br>据说是出关去西域了。出的关据说就是函谷关。<br>函谷关当初大概在今天的河南灵宝县，后来关口移到了今天的河南新安县。这里两山对峙，中间一条小路，因为路在山谷中，既深又险要，好像在函子里一样，所以取名为函谷关。<br>至关，关令尹喜曰：“子将隐矣，强为我著书。”<br>我要写的历史上老子的瞬间，就在此刻发生。此时大约在2500多年前，公元前500年左右。<br>既然老子要无名自隐，自然也不会有什么著作昭示众生。如果没有此时此地此人，没有这个瞬间，《道德经》一书就没有了。<br>所以我觉得我们可以把此一瞬间，不仅看作老子的瞬间，更要看成是中国哲学的破茧而出的瞬间。石破天惊逗秋雨。天雨粟，鬼夜哭！<br>大概也是觉得这个瞬间的非同寻常，司马贞索隐引刘向《列仙传》，给这个瞬间一个玄之又玄的序幕：<br>老子西游，关令尹喜望见有紫气浮关，而老子果乘青牛而过也。<br>据说这位关令尹喜也是周之大夫，也是一个隐德行仁的高人。他预先望见有紫气东来，知道将有真人经过，便留意观察东来行人，果然迎得老子。尹喜对老子说，你要从人间隐退了。在你远行之前，为我们留下你的思想吧。<br>司马迁接着叙道：<br>于是老子乃著书上下篇，言道德之意五千余言而去，莫知所终。<br>老子的生平，对我们而言，是无始无终的：我们不知道他从哪里来，也不知道他到了哪里去。我们不知他的生，也不知他的死。他自己说“出生入死”，他好像是来自宇宙中某一个星球的高度发达的物种，在我们这个星球的东方落脚，然后，又飞升而去。据说，甘肃临洮的“超然台”，就是他的飞升之所。<br>后来道教的仙人，都是以“飞升”的方式离开这个星球。难道道士们就是一群来自星星的你？<br>老子，他或许还在那个星星上远眺地球。会有一声叹息来自天庭吗？他还记得他留在这个地球上的五千言吗？<br>它们已经成为全人类的智慧渊薮。  </p><h4 id="2-东鲁杏坛"><a href="#2-东鲁杏坛" class="headerlink" title="2.东鲁杏坛"></a>2.东鲁杏坛</h4><p>据说孔子也曾经有这样的去意。他曾经感叹：道不行，乘桴浮于海。但最终没有成行，他只是离开了鲁国，周游列国，被当时人讽刺为“避人之士”。老了，还是回到鲁国，整理六经。孔子没有老子的决绝。他也曾经对着一位卫国的隐士叹息自己：“果哉！末之难矣。”——他真果决啊！我做不到啊！<br>其实，在老子被尹喜强迫留下五千言之前，孔子也曾用他的方式纠缠过老子，让他留下教诲。<br>《史记·老子韩非列传》有这样一则动人的故事：<br>孔子适周，将问礼于老子。老子曰：“……吾闻之，良贾深藏若虚，君子盛德，容貌若愚。去子之骄气与多欲，态色与淫志，是皆无益于子身。”<br>这是老子和孔子两个人的瞬间，也是两种思想、两种学派、两种思维范式互相碰撞的瞬间。阴性的老子和阳性的孔子相撞击，如同天空的雷电，瞬间照亮黑暗的历史天幕。<br>此刻的老子，估计应该在六十岁左右吧，孔子，三十四岁。面对这样一个血气方刚的后生，老子不动声色地点出两个字：藏和愚。<br>其实，愚就是藏。把智慧藏起来。把才华藏起来。把志向藏起来。把理想藏起来。藏不是没有，不是放弃，是一种含蓄而坚定的保持。“愚”，不是智慧的缺乏，而是智慧的“收藏”，不是智慧的不足，而是智慧的收敛，不是智慧的麻木，而是智慧的蛰伏。<br>我们其实可以想象得到：三十而立之后的孔子，是何等意气风发，斗志昂扬，是何等志向远大，理想崇高，是何等意志坚定，自信自负……<br>这些都是一个年轻人的优点，没有这些，注定不会有所成就。<br>但是，如果仅仅这样，而缺少适度的弹性，适度的退守，适度的淡泊，也不会成为大才。<br>此时的孔子，学问有了，志向有了，眼界胸襟都有了。但是，还缺乏一种东西：弹性的性格。<br>孔子见老子，是孔子人生的一个瞬间。这个瞬间，如同滚烫的生铁突然淬火，获得了更多的特质。<br>此后的孔子，阳刚依旧，阔大依旧，但多了一分从容淡定、轻松自在。<br>《庄子·渔父》：<br>孔子游乎缁帷之林，休坐乎杏坛之上。弟子读书，孔子絃歌鼓琴，奏曲未半。<br>曲阜孔庙里，即有一个杏坛赫然矗立。但细揣庄子之意，他笔下的“杏坛”，不过是孔子带着弟子从茂密浓郁的森林中走出，恰好碰到的一个水边高台而已，此水即是渔父打渔之地，谋生之所而隐居之处，芦苇丰茂，绝无可能在鲁国都之内。也就是说，“杏坛”，本来就只是庄子随口诌出的一个词，绝无可能是孔子专门讲学之所，则今天孔庙里的杏坛，就只能是后人望文生物而造出来的。顾炎武说：“《庄子》书凡述孔子，皆是寓言，渔父不必有其人，杏坛不必有其地。即有之，亦在水上苇间、依陂旁渚之地，不在鲁国之中也明矣。”（《日知录·卷三十一》）<br>但是，一个道家人物随口诌出的词，为什么却被坐实，一个虚构的寓言，如何竟然成为历史？<br>其实原因非常简单：这个寓言，不是生活的真实，但却有着本质上的真实；不是物理上的真实，却是精神上的真实——它确实是孔子日常教学生涯的高度概括。<br>孔子的私学，与弟子切磋琢磨的日常生活，实现了人类生活有可能达到的现实与精神、物理与心灵的圆融。这种圆融，已经超越了物理之真与伦理之善，而达到极致的境界：美。真与善的纯粹之境，就是美。<br>庄子，毕竟是手眼通天的极致高人，他感受到了孔子生活方式的诗意，他直觉到了孔子日常生活中蕴含着人类生活的大美。他看到了，他情不自禁地喊出：美啊！请停留一下！<br>最后，他用自己的文字，让这个美永恒停留：眼前春水，身后杏花，白云在天，清风在袖，落花依草，弟子围坐——这虚构的一时胜境，从此成为一个民族永恒的灵境，孔子和他的弟子们，永在此境，弹琴，歌唱，笑语盈盈。——这其实就是天堂的模样。<br>我们来看看这一瞬间：孔子，在水陂边，杏树下，安详地坐下，展开他的五弦琴，轻声弦歌。弟子们，安静地围拢——琴声响起，歌声响起，书声琅琅。这个混乱嘈杂充满杀伐怨恨之声的时代仿佛一下子阒寂无声，而明媚的阳光和明丽的杏花、明滟的水面，一下子照亮了时代的黑暗。<br>——这是孔子生命的一个瞬间，但是，它成了一个民族的永恒时光：就在这一瞬间，这个民族重新获得了从容与安详，获得了光明与方向。<br>我在两千多年后向那个黑暗的时代投去目光，我看到了在黑暗的心脏，有这样一片温暖的光亮。我看到这个光圈里面，一个慈祥的老人，和围坐在他身边的年轻人。是的，只要我们心中永远有这样一幅画面，我们就不会缺少温暖，我们的心灵就有皈依。而且，我们会循着这个光亮，围拢过去，一圈又一圈，无限延展……<br>我常常想一个问题：十五岁的从事“鄙事”以养活自己的少年，何以会立下“志于学”的志向？在他那个阶层的人无论传统还是现实都以出仕从政为人生正途的时代，“志于学”这三个字是何等石破天惊，预示着一个圣人的降临，预示着一个民族的苏醒？是什么样的宇宙能量电击了他那有些畸形状如反宇的头颅？他那四周高中间低的奇特头型，是否就是这次电击的印记？<br>我还常常想一个问题，三十岁的孔子，从社会的最底层已经进入鲁国的上层甚至可以进入太庙，在仕途一派光明的时候，突然放弃这一切，转而创立私学，开启人类教育的新纪元，把文明的星星之火点燃？他领悟到了什么样的历史使命？<br>老子走了，孔子来了。<br>老子因失望而离去，孔子为拯救而到来。<br>老子是史前史的后记，充满叹息和诅咒。《道德经》作为历史的总结，智慧高超，但冷静到冷酷。<br>孔子是新纪元的序言，充满期待和勉励。《论语》作为新历史的开篇，仁德蔼然，热心到热切。<br>老子留给我们巨大黝黑的背影，孔子展露给我们宽广明亮的前额。<br>天不生仲尼，万古如长夜。<br>朱熹《朱子语类》卷九十三记下了这句话，并在后面有一句说明：“唐子西尝于一邮亭梁间见此语。”唐子西，唐庚(1069～1120)，字子西，眉州(今四川眉山)人，《唐子西文录》记载：“蜀道馆舍壁间题一联云：‘天不生仲尼，万古如长夜’，不知何人诗也。”<br>我很奇怪，对孔子的精神境界体悟得最为深刻描叙得最为到位也最为诗意的，总是这些“不知何人”的人：说孔子是“天下之木铎”的，是无名氏；说孔子是“丧家狗”的，是无名氏；说孔子是“知其不可而为之者”的，也是无名氏。<br>他们都感受到了孔子的真精神。<br>我们不都是无名氏？我们的内心，不也感受到了孔子？不也听到了他的声音，感觉到了他的心跳，体贴到了他的温暖？  </p><h4 id="3-庄周梦蝶"><a href="#3-庄周梦蝶" class="headerlink" title="3.庄周梦蝶"></a>3.庄周梦蝶</h4><p>庄子在一个黑夜里，在他的土屋中想象并描写了孔子的杏坛。他肯定意识到了，这是历史的瞬间，是人类文明的瞬间。<br>其实，他也有他光芒万丈的瞬间。<br>《史记》说庄子“与梁惠王、齐宣王同时。其学无所不窥，然其要本归於老子之言。”老庄并称一如孔孟连及。庄子固然尊敬孔子，但他最为向慕的，还是老子。<br>《孔子世家》里，还记载了老子送给孔子的临别赠言：<br>为人子者毋以有己，为人臣者毋以有己。<br>其实，我一直想把这两句话中的“子”和“臣”两个字去掉，从而两句成一句——“为人者毋以有己”。<br>这不是我自作聪明，删改前贤嘉言。庄子早就这样改了，他的句子比我的更简洁，只有三个字——吾丧我。<br>吾——即自我的本体，本来的自我。<br>我——附寄于“吾”的自以为是的观念、知识、经验、是非、好恶等等“成见”“成心”。<br>“我”总是遮蔽着“吾”，不仅使“吾”不能与世界赤诚相见，无法互相洞开；反而使得“吾”认“我”为“吾”，“我”把“吾”李代桃僵了。<br>使“吾”遮蔽，让“我”嚣张的，莫过于功名利禄。<br>讲到这里，我们来看看属于庄子的瞬间——<br>庄子钓于濮水，楚王使大夫二人往先焉，曰：“愿以境内累矣！”<br>庄子持竿不顾，曰：“吾闻楚有神龟，死已三千岁矣，王巾笥而藏之庙堂之上。此龟者，宁其死为留骨而贵乎？宁其生而曳尾于涂中乎？”<br>二大夫曰：“宁生而曳尾涂中。”<br>庄子曰：“往矣，吾将曳尾于涂中。”<br>这确实是典型的庄子的瞬间。对于体制来说，老子是身处其中而离开，庄子是身处其外而不入。这两者似同而实异：身处其中而离开者，是出于失望；身处其外而不入者，是出于无望。一个是由有入无，一个是本来即无。盖庄子，较之老子，对体制的道德属性更其绝望，他是避世之士，而老子，其实还只是避人之士——与孔子其实差不多。老子出关，孔子去鲁；老子远去西域而以华夏化胡，孔子欲居九夷而用君子除陋，其实，两人都还是有一番作为之心。鲁迅看得明白：<br>故自史迁以来，均谓周之要本，归于老子之言。然老子尚欲言有无，别修短，知白黑，而措意于天下；周则欲并有无修短白黑而一之，以大归于“混沌”，其“不谴是非”“外死生”“无终始”，胥此意也。中国出世之说，至此乃始圆备。（《汉文学史纲要·老庄》）<br>需要说明的是，中国传统儒道文化之“出世”，并非印度佛教之“出世”。中国儒道之出世，乃是弃绝体制；印度佛教之出世，乃是跳出轮回。儒道之出世，并非出伦理，只是出体制；不是出人生，恰恰相反，是要一个更好的人生。《道德经》之小国寡民，陶渊明之《桃花源记》，都是为了更好的人生而设计，都是为了更好的人生而眺望。我们看到，无论是老子的“小国寡民”，还是陶渊明的“桃花源”，都是无国无君而有人伦父子。儒道之出世，不过是拒绝公共生活影响私人生活，不使公共责任影响个人逍遥，不让职事之鞅掌限制个人之自由，更不愿体制之污浊亵渎个人之名节。个人逍遥本来只是一种审美境界，但是，由于体制本身的道德属性往往负面，背离体制就显得正面，而那些对着体制背转身去的人，也往往确实是背转体制的那一分肮脏与非人性，为此他们还要承受巨大的物质上的损失。于是，他们就获得了道德上与审美上的双重意义——道德意义是在肮脏的世界保持一分干净；审美意义是个人自由具有无与伦比的价值。<br>说到“逍遥”，我们就不能不说庄子了。翻开庄子，第一篇就是《逍遥游》。<br>北冥有鱼，其名曰鲲。鲲之大，不知其几千里也。化而为鸟，其名为鹏。鹏之背，不知其几千里也；怒而飞，其翼若垂天之云。是鸟也，海运则将徙于南冥。（《逍遥游》）<br>庄子的价值，在于为人类开拓出一个经验之外的世界，并且告诫我们，使我们不自由的，恰恰是我们的经验和知识。<br>逍遥游，就是无牵无挂的自由，就是绝对自由。但是，庄子用的是这样的词：无待。<br>何为待？——待者，恃也，凭借，依赖。<br>何为无待？——就是无恃，无所凭借。<br>人生最常见的待什么？待知识。待经验。待常识。<br>但是，庄子偏偏告诉我们，不能依赖知识、经验、常识等等，甚至，你读他的文章，他都暗示你，不要带着成见、经验、知识进来。<br>试想，带着经验和常识，我们如何能读这样的文字？经验、常识与理性，如何能容忍和接受这样的文字？<br>庄子的出现，拓展了我们的世界和视界。<br>孔子讲日常伦理，他要我们踏实而真诚地生活。<br>庄子大言，讲经验之外的世界，他在教我们超凡绝俗地生活。<br>但庄子最独特的贡献，还是他教会我们如何去死。<br>庄子《大宗师》有言：“死生，命也。”<br>死亡是一个现实的事件，但是，死后的世界却是一个非现实的世界。所以，孔子这样的关注现实的思想家往往拒绝谈论这样的话题。<br>而《庄子》一书却满是生死神怪。<br>庄子说他到楚国去，途中见到一个骷髅，他同情骷髅，骷髅却告诉他：“人一旦死了，在上没有国君的统治，在下没有官吏的管辖；也没有四季的操劳，从容安逸天长地久，即使南面为王的快乐，也不可能超过。”并且坚决拒绝再活过来。（《庄子·至乐》）<br>实际上，这段对话里，骷髅才是庄子，而那个“庄子”，则是庄子在表演“我们”——“骷髅”庄子在告诉“我们”，死了，比活着好。<br>这当然是对生活很失望的意思。你看他借列子之口发出的感慨：<br>列子行，食于道从(道旁)，见百岁髑髅，攓蓬而指之曰：“唯予与汝知而未尝死、未尝生也。若果养乎？予果欢乎？”<br>陶渊明说：“生实艰难，死如之何！”也是这个意思。<br>总之，我们几千年来没怎么活好过，所以，也不怕死。相反，“以生为附赘县疣，以死为决肒溃痈。”（《庄子·大宗师》）<br>庄子妻死，庄子箕踞鼓盆而歌。为什么歌？是祝贺她终于解脱了，好比是囚徒的刑满释放。<br>子桑户、孟子反、子琴张三人……相与为友。莫然有间而子桑户死，未葬。孔子闻之，使子贡往侍事焉。或编曲，或鼓琴，相和而歌曰：“嗟来桑户乎！嗟来桑户乎！而已反其真，而我犹为人猗！”（《庄子·大宗师》）<br>你看，他们是羡慕死去的人，痛哭自己还得在人世受煎熬。<br>我们有这样两个成语，一个叫“视死如归”，一个叫“人生如梦”，这是庄子给我们创造的——<br>予恶乎知说生之非惑邪！予恶乎知恶死之非弱丧而不知归者邪！……予恶乎知夫死者不悔其始之蕲生乎！……梦饮酒者，旦而哭泣；梦哭泣者，旦而田猎。方其梦也，不知其梦也。梦之中又占其梦焉，觉而后知其梦也。且有大觉而后知此其大梦也。（《庄子·齐物论》）<br>呵呵，庄子说，人只有经过一场大觉才能知道他自身乃是一场大梦。<br>他岂只是为我们创造了两个成语？他为我们建立了一种生死观，让我们含笑面对死亡，让我们在死神面前，保持潇洒的风度和英雄的气概。<br>人生如梦，是一种认识。<br>视死如归，是一种态度。<br>有这样的认识，我们很深刻。<br>有这样的态度，我们很潇洒。<br>它们——<br>一、显示了我们的洞彻人生的智慧；<br>二、体现了我们的笑对死亡的风度。<br>法国思想家蒙田有一篇文章，题目就叫《哲学就是学会死》——据说，这是西塞罗引述柏拉图的话。<br>哲学就是学会死。多好的话啊。<br>那么，哲人呢？<br>哲人就是给我们一个最为美丽的死亡姿势，让死亡也充满魅力的人。<br>庄子将死，弟子们讨论如何安葬庄子，他们的计划里，要用很多东西作为陪葬。<br>有意思的是，他们讨论这些时，就在庄子身边，也不避开庄子。<br>于是，庄子加入了讨论，也表达了他的意见。<br>庄子说：“我把天地当作棺槨，把日月当作连璧，把星辰当作珠玑，万物都可以成为我的陪葬。我陪葬的东西难道还不完备吗？哪里用得着再加上这些东西呢。”<br>弟子们说：“我们担忧乌鸦和老鹰会啄食先生的遗体。”<br>庄子说：“弃尸地面就是让乌鸦和老鹰吃，深埋地下就是让蚂蚁吃。你们为什么要抢夺乌鸦老鹰的吃食交给蚂蚁呢？你们怎么如此偏心？”（《列御寇》）<br>庄子一辈子嘲弄世界，此刻，他嘲弄自己的死亡。<br>他一辈子幽默，死到临头，还向死幽默。<br>而这幽默里，又包含着对众生的广博的爱和大平等。<br>《庄子》中，庄子两次借孔子之口感叹：死生亦大矣。那好，我们就比较一下孔子的死。<br>孔子病，子贡请见。孔子方负杖逍遥于门，曰：“赐，汝来何其晚也？”孔子因叹，歌曰：“太山坏乎！梁柱摧乎！哲人萎乎！”因以涕下。谓子贡曰：“天下无道久矣，莫能宗予。夏人殡于东阶，周人于西阶，殷人两柱间。昨暮予梦坐奠两柱之间，予始殷人也。”后七日卒。（《史记·孔子世家》）<br>孔子的死，是悲剧。<br>庄子的死，是喜剧。<br>孔子的死，让我们哭。<br>庄子的死，让我们笑。<br>孔子把自己的死看得很大。<br>庄子把自己的死看得很小。<br>孔子知道自己的分量，尤其知道自己肩上承担的责任的分量。<br>庄子却从更广远的视野，看到了一个人的渺小，哪怕这个人是一个旷世的大哲人。<br>在无穷无尽的时间里，人命何等危浅。<br>在无边无际的空间里，人生何等渺小。<br>孔子看到了，一人的生死，牵动着时代和文化。<br>庄子看到了，一人的生死，无损于宇宙和世界。<br>唉，说到这里，当然要说说庄周梦蝶——这是庄子一生中最为神奇的一个瞬间——这个美丽的故事，感动了所有的中国人，它里面包含着对人生的了悟与感伤，它是哲学，也是诗，它把我们带到世界的深处，带到我们生命的深处——<br>昔者庄周梦为胡蝶，栩栩然胡蝶也，自喻适志与，不知周也。俄然觉，则蘧蘧然周也。不知周之梦为胡蝶与？胡蝶之梦为周与？周与胡蝶则必有分矣，此之谓物化。<br>原来，我们衷心仰慕的大哲人，庄子，也就是这个世界某一角落，一个蝴蝶的一个不经意的梦。<br>这个蝴蝶在山谷间，飞来飞去，飞累了，落到一树花枝上，睡着了，做了一个梦。<br>于是，庄子来到了人间。<br>现在，大概是一阵风来，花枝颤抖，蝴蝶醒了，庄子在人间消失了。<br>一切都在一瞬间。我们还在诧异中——<br>刚才，是蝴蝶梦着庄周；还是，此刻，是庄周梦着蝴蝶？<br>突然，我们惊觉：此刻的我们，如此执着、孜孜矻矻的我们，我们的形体与角色，是真实的还是另外一个什么东西的一场梦？当我们醒来，我们大觉之时，会发现我们是什么东西？或者，不是什么东西？  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;诸子的那些瞬间&quot;&gt;&lt;a href=&quot;#诸子的那些瞬间&quot; class=&quot;headerlink&quot; title=&quot;诸子的那些瞬间&quot;&gt;&lt;/a&gt;诸子的那些瞬间&lt;/h2&gt;&lt;p&gt;鲍鹏山 著&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;导读&lt;br&gt;推开历史的窗户，中国的一个</summary>
      
    
    
    
    
    <category term="杂文" scheme="https://boneink.github.io/tags/%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>云计算实验8</title>
    <link href="https://boneink.github.io/2019/05/26/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C8/"/>
    <id>https://boneink.github.io/2019/05/26/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C8/</id>
    <published>2019-05-26T04:00:00.000Z</published>
    <updated>2019-05-26T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LAB-8"><a href="#LAB-8" class="headerlink" title="LAB 8"></a>LAB 8</h2><hr><h4 id="Name"><a href="#Name" class="headerlink" title="Name:"></a>Name:</h4><p>  Introduction to Cloud Computing– Cloudlet</p><h3 id="Target"><a href="#Target" class="headerlink" title="Target:"></a>Target:</h3><ul><li>Understanding the concept of Cloudlet Model </li><li>Testing the cloudlet demo in your docker environment </li><li>Wring your own report on experiencing the demo</li></ul><ol><li>安装基础镜像<br> google 官方推荐使用 ubuntu 14.04 来进行编译： <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu:14.04 </span><br></pre></td></tr></table></figure> 然后使用这个镜像启动一个容器： <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v ~/data:/home/data ubuntu:14.04 /bin/bash </span><br></pre></td></tr></table></figure> 启动容器之后执行下面这个命令来进入交互环境: <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it d9bcf2da1d4b /bin/bash </span><br></pre></td></tr></table></figure></li><li>安装编译工具<br> 添加64位系统对32位的支持：<br> 检查是否已经支持 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dpkg --print-architecture # 若支持，输出 amd64 </span><br><span class="line">dpkg --print-foreign-architectures # 若支持，输出 i386 </span><br></pre></td></tr></table></figure> 手动开启支持 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg --add-architecture i386 apt-get update apt-get upgrade </span><br></pre></td></tr></table></figure> 安装32位支持库<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0 </span><br></pre></td></tr></table></figure><br> 添加编译Android源码需要的依赖 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get install gcc-multilib g++-multilib build-essential </span><br><span class="line">apt-get install git-core gnupg bison flex gperf pngcrush bc zip curl lzop </span><br><span class="line">apt-get install schedtool libxml2 libxml2-utils xsltproc squashfs-tools </span><br><span class="line">apt-get install libesd0-dev libsdl1.2-dev libwxgtk2.8-dev libswitch-perl </span><br><span class="line">apt-get install libssl1.0.0 libssl-dev lib32readline-gplv2-dev libncurses5-dev </span><br></pre></td></tr></table></figure> 安装 jdk 在宿主机上操作，从 oracle 官网下载 jdk1.6， 放到 ~&#x2F;data 目录下，因为我们已经把 data 目录挂载到容器了，接 下来在容器里面操作 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x jdk-6u45-linux-x64.bin ./jdk-6u45-linux-x64.bin mkdir -p /usr/lib/jvm mv jdk1.6.0_45 /usr/lib/jvm </span><br></pre></td></tr></table></figure></li><li>不使用 root 用户进行编译<br> 默认情况下，容器是root用户进行登录的，这种情况下编译输出目录out及其子目录是 root 用户权限的。这样我 们要在宿主机上修改这个目录的话，就比较麻烦了。我们可以在 docker 里面新创建一个用户，一般来说第一个 非 root 用户的 uid 及gid 都是1000， 我们在宿主机上的 uid 和 gid 也是1000。我们可以用这个命令来查看用户的 uid 信息： <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">ubuntu@boneink~/data/android_source$ </span><span class="language-bash"><span class="built_in">id</span> deep</span> </span><br><span class="line">uid=1000(deep) gid=1000(deep) 组=1000(deep),7(lp),27(sudo),100(users),109(netdev),113( </span><br><span class="line">deep@boneink:~/data/android_source$ </span><br></pre></td></tr></table></figure> 我们在容器里面执行以下命令来创建新用户 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd -d /home/build -m build </span><br><span class="line">passwd build </span><br></pre></td></tr></table></figure> 然后查看一下新建用户的 uid <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id build </span><br></pre></td></tr></table></figure> 发现 build 用户的uid和gid的确也是 1000。linux 的文件权限其实是指定给 uid,gid 的，也就是说只要我们容器里 面的 uid 和gid 与宿主机的相同，那我们在容器里面创建的文件在宿主机也是可以随意编辑的。 以指定用户进入容器: 当前的容器还是以 root 用户登录的，我们先退出来，然后执行以下命令 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it -u 1000 479a114fe8a7 /bin/bash </span><br></pre></td></tr></table></figure> 我们在 build 用户目录新建一个目录用来挂载 android 源码。 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd mkdir android_source </span><br></pre></td></tr></table></figure> 然后再设置 <code>JAVA_HOME</code>, <code>PATH</code> 就行了。 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .bashrc </span><br></pre></td></tr></table></figure> 加上两行配置 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/lib/jvm/jdk1.6.0_45 </span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH </span><br></pre></td></tr></table></figure> 至此所需要的编译环境就已经配置完成了。<br> 提交容器保存为镜像: <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit -m &quot;aosp build env&quot; d9bcf2da1d4b aosp_build:V1.0</span><br></pre></td></tr></table></figure> 使用镜像编译Android系统源码: 在宿主机上，创建源码目录 <code>/home/deep/Android/source</code> 目录，并放入Android系统源码。 然后执行以下命令，创建新容器<br> 进入 android 源码目录，按照 android 的标准编译步骤进行编译. <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /home/builder/android_source/aosp_android4.4 source build/envsetup.sh make -j8 </span><br></pre></td></tr></table></figure></li><li>部署demo服务器 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v /home/deep/Android/source:/home/builder/android_source aosp_build:V1</span><br></pre></td></tr></table></figure> 按照指南将qcow2映像导入正在运行的OpenStack 。 启动该实例。FaceSwap服务器将在启动时自动启动。 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server/start_demo.sh </span><br></pre></td></tr></table></figure> 实例完全启动后，将FaceSwap客户端连接到它以供使用。</li></ol><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>Elijah.cs.cmu.edu. (2019). Elijah Home. [online] Available at: <a href="http://elijah.cs.cmu.edu/">http://elijah.cs.cmu.edu/</a> [Accessed 25 May 2019].<br>GitHub. (2019). cmusatyalab&#x2F;faceswap. [online] Available at: <a href="https://github.com/cmusatyalab/faceswap">https://github.com/cmusatyalab/faceswap</a> [Accessed 25 May 2019].<br>Cmusatyalab.github.io. (2019). FaceSwap Documentaon. [online] Available at: <a href="https://cmusatyalab.github.io/faceswap/">https://cmusatyalab.github.io/faceswap/</a> [Accessed 25 May 2019].</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LAB-8&quot;&gt;&lt;a href=&quot;#LAB-8&quot; class=&quot;headerlink&quot; title=&quot;LAB 8&quot;&gt;&lt;/a&gt;LAB 8&lt;/h2&gt;&lt;hr&gt;
&lt;h4 id=&quot;Name&quot;&gt;&lt;a href=&quot;#Name&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    
    <category term="云计算" scheme="https://boneink.github.io/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    <category term="实验作业" scheme="https://boneink.github.io/tags/%E5%AE%9E%E9%AA%8C%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>云计算期末</title>
    <link href="https://boneink.github.io/2019/05/21/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E6%9C%9F%E6%9C%AB%E4%BD%9C%E4%B8%9A/"/>
    <id>https://boneink.github.io/2019/05/21/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E6%9C%9F%E6%9C%AB%E4%BD%9C%E4%B8%9A/</id>
    <published>2019-05-21T04:00:00.000Z</published>
    <updated>2019-05-21T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="项目名称"><a href="#项目名称" class="headerlink" title="项目名称"></a>项目名称</h3><p>  基于Socket.io通信的《你画我猜》docker镜像制作</p><h3 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h3><ol><li>原有项目已实现： <ul><li>画笔 </li><li>关键词 </li><li>计时</li></ul></li><li>本次实验实现 <ul><li>添加聊天功能 </li><li>添加弹幕 </li><li>UI等细节优化 </li><li>对应docker镜像的制作和上传</li></ul></li></ol><h3 id="项目实现"><a href="#项目实现" class="headerlink" title="项目实现"></a>项目实现</h3><ol><li>聊天功能： <ul><li>通过在页面内添加消息框的div及input标签用于信息显示及发送，然后在负责客户端的io.js中添加信息传 输代码： <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">socket.<span class="title function_">on</span>(<span class="string">&#x27;server msg&#x27;</span>, <span class="keyword">function</span> (<span class="params">data</span>) &#123;      </span><br><span class="line"><span class="keyword">var</span> ele = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;p&#x27;</span>);      </span><br><span class="line">ele.<span class="property">innerHTML</span> = data;    </span><br><span class="line">msg.<span class="title function_">appendChild</span>(ele);    </span><br><span class="line">msg.<span class="property">scrollTop</span> = msg.<span class="property">scrollHeight</span>; </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>在负责客户端的service.js中添加信息传输代码，关键部分如下： <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">io.<span class="property">sockets</span>.<span class="title function_">on</span>(<span class="string">&#x27;connection&#x27;</span>, <span class="keyword">function</span> (<span class="params">socket</span>) &#123;      </span><br><span class="line">socket.<span class="title function_">on</span>(<span class="string">&#x27;login&#x27;</span>, <span class="keyword">function</span> (<span class="params">name</span>) &#123;  </span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">on</span>(<span class="string">&#x27;client msg&#x27;</span>, <span class="keyword">function</span> (<span class="params">msg</span>) &#123;      </span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_">doCmd</span>(msg, <span class="variable language_">this</span>)) &#123;          </span><br><span class="line">msg = escapeHTML(msg);          </span><br><span class="line"><span class="keyword">if</span> (<span class="title class_">Game</span>.<span class="property">player</span> &amp;&amp; <span class="title class_">Game</span>.<span class="property">player</span>.<span class="property">word</span>.<span class="property">word</span> === msg) &#123;              <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">prev</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">prev</span>.<span class="property">player</span> === <span class="title class_">Game</span>.<span class="property">player</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">prev</span>.<span class="property">word</span>;                 </span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;server msg&#x27;</span>, <span class="string">&quot;您已经正确回答过了！&quot;</span>);                  <span class="keyword">return</span>;              </span><br><span class="line">&#125;              </span><br><span class="line">tops.<span class="title function_">set</span>(<span class="variable language_">this</span>.<span class="property">id</span>.<span class="title function_">substring</span>(<span class="number">2</span>), <span class="variable language_">this</span>.<span class="property">name</span>, tops.<span class="title function_">get</span>(<span class="variable language_">this</span>.<span class="property">id</span>.<span class="property">substring</span>             </span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;server msg&#x27;</span>, <span class="string">&quot;真棒！回答正确！&quot;</span>);             </span><br><span class="line"><span class="variable language_">this</span>.<span class="property">broadcast</span>.<span class="title function_">emit</span>(<span class="string">&#x27;server msg&#x27;</span>, <span class="string">&quot;恭喜！&quot;</span> + <span class="variable language_">this</span>.<span class="property">name</span> + <span class="string">&quot; 回答正确！             </span></span><br><span class="line"><span class="string">var j = JSON.stringify(tops);             </span></span><br><span class="line"><span class="string">       this.broadcast.emit(&#x27;tops&#x27;, j);             </span></span><br><span class="line"><span class="string">       this.emit(&#x27;tops&#x27;, j);              </span></span><br><span class="line"><span class="string">       this.prev = &#123;                  </span></span><br><span class="line"><span class="string">       player: Game.player,                  </span></span><br><span class="line"><span class="string">       word: msg              </span></span><br><span class="line"><span class="string">       &#125;;              </span></span><br><span class="line"><span class="string">       return;          </span></span><br><span class="line"><span class="string">       &#125;          </span></span><br><span class="line"><span class="string">       var date = new Date().format(&#x27;yyyy-MM-dd hh:mm:ss&#x27;);          </span></span><br><span class="line"><span class="string">       this.emit(&#x27;server msg&#x27;, date + &#x27;&lt;br&gt;&#x27; + this.name + &#x27; 说: &#x27; + msg);          </span></span><br><span class="line"><span class="string">       this.broadcast.emit(&#x27;server msg&#x27;, date + &#x27;&lt;br&gt;&#x27; + this.name + &#x27; 说: &#x27; +      </span></span><br><span class="line"><span class="string">       &#125;  </span></span><br><span class="line"><span class="string">       &#125;);  </span></span><br></pre></td></tr></table></figure></li><li>在客户端的js.js部分通过判断发言者身份来进行发言权限的管理，主要代码如下： <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;     </span><br><span class="line"><span class="title class_">Ctl</span>.<span class="title function_">init</span>();     </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">resize</span>(<span class="params"></span>) &#123;         </span><br><span class="line">canvas.<span class="property">width</span> = canvas.<span class="property">parentElement</span>.<span class="property">clientWidth</span>;         </span><br><span class="line">canvas.<span class="property">paths</span> = canvas.<span class="property">pts</span> = [];         </span><br><span class="line">socket.<span class="title function_">emit</span>(<span class="string">&#x27;repaint&#x27;</span>);     </span><br><span class="line">&#125;     </span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>,resize);     </span><br><span class="line"><span class="title function_">resize</span>();     </span><br><span class="line">input.<span class="property">onkeydown</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;         </span><br><span class="line"><span class="keyword">if</span>(e.<span class="property">keyCode</span> === <span class="number">13</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">value</span>!=<span class="string">&#x27;&#x27;</span>)&#123; </span><br><span class="line"><span class="keyword">if</span>(canvas.<span class="property">isMe</span>)&#123;                 </span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;绘图者不能够发送消息！&#x27;</span>);                 </span><br><span class="line"><span class="keyword">return</span>;             </span><br><span class="line">&#125;             </span><br><span class="line">socket.<span class="title function_">emit</span>(<span class="string">&#x27;client msg&#x27;</span>,<span class="variable language_">this</span>.<span class="property">value</span>);             </span><br><span class="line">socket.<span class="title function_">emit</span>(<span class="string">&quot;barrage&quot;</span>, <span class="variable language_">this</span>.<span class="property">value</span>);             </span><br><span class="line"><span class="variable language_">this</span>.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;         </span><br><span class="line">&#125;     </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#btns&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span> (<span class="params">e</span>) &#123;         </span><br><span class="line"><span class="keyword">if</span>(e.<span class="property">target</span>.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;btn-active-able&#x27;</span>))&#123;             </span><br><span class="line"><span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">prevBtn</span>)&#123;                 </span><br><span class="line"><span class="variable language_">this</span>.<span class="property">prevBtn</span>.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;active&#x27;</span>)             </span><br><span class="line">&#125;             </span><br><span class="line">e.<span class="property">target</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;active&#x27;</span>)             </span><br><span class="line"><span class="variable language_">this</span>.<span class="property">prevBtn</span> = e.<span class="property">target</span>;         </span><br><span class="line">&#125;     </span><br><span class="line">&#125;,</span><br><span class="line"><span class="literal">true</span>); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></li></ul></li><li>添加弹幕<br> 本项目使用<code>Jquery.barrager.js</code>插件实现弹幕功能 <ul><li>主页添加弹幕区域： <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;barrage-body&quot;</span>&gt;</span>     </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;online_count&quot;</span> <span class="attr">class</span>=<span class="string">&quot;online_count&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br></pre></td></tr></table></figure></li><li>在jquery.barrager.js中进行弹幕样式的相关设置，主要代码如下： <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$.fn.<span class="property">barrager</span> = <span class="keyword">function</span> (<span class="params">barrage</span>) &#123;     </span><br><span class="line">barrage = $.<span class="title function_">extend</span>(&#123;         </span><br><span class="line"><span class="attr">close</span>: <span class="literal">true</span>,         </span><br><span class="line"><span class="attr">bottom</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">1000</span>+<span class="number">50</span>,         </span><br><span class="line"><span class="attr">max</span>: <span class="number">10</span>,         </span><br><span class="line"><span class="attr">speed</span>: <span class="number">8</span>,         </span><br><span class="line"><span class="attr">color</span>: <span class="string">&#x27;#fff&#x27;</span>,         </span><br><span class="line"><span class="attr">old_ie_color</span>: <span class="string">&#x27;#000000&#x27;</span>         </span><br><span class="line">&#125;, barrage || &#123;&#125;);  &#125; </span><br></pre></td></tr></table></figure></li><li>在负责客户端的io.js进行数据传输设置，主要代码如下： <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">socket.<span class="title function_">on</span>(<span class="string">&#x27;barrage&#x27;</span>, <span class="keyword">function</span> (<span class="params">msg</span>) &#123;     </span><br><span class="line"><span class="keyword">var</span> item = &#123;         </span><br><span class="line"><span class="string">&#x27;img&#x27;</span>: <span class="string">&#x27;2.jpg&#x27;</span>,         </span><br><span class="line"><span class="string">&#x27;info&#x27;</span>: msg,         </span><br><span class="line"><span class="string">&#x27;close&#x27;</span>: <span class="literal">false</span>,         </span><br><span class="line"><span class="string">&#x27;speed&#x27;</span>: <span class="number">16</span>         </span><br><span class="line">&#125;;         </span><br><span class="line">$(<span class="string">&#x27;.barrage-body&#x27;</span>).<span class="title function_">barrager</span>(item); </span><br><span class="line">&#125;); </span><br></pre></td></tr></table></figure></li><li>在负责服务端的service.js中进行数据传输设置，主要代码如下： <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">io.<span class="title function_">on</span>(<span class="string">&#x27;connection&#x27;</span>, <span class="keyword">function</span> (<span class="params">socket</span>) &#123;     <span class="comment">// 接收弹幕消息     </span></span><br><span class="line">socket.<span class="title function_">on</span>(<span class="string">&#x27;barrage&#x27;</span>, <span class="keyword">function</span> (<span class="params">msg</span>) &#123;         </span><br><span class="line"><span class="comment">// console.log(&#x27;message:&#x27; + msg);         </span></span><br><span class="line"><span class="comment">// 过滤xssvar          </span></span><br><span class="line">msg = <span class="title function_">xss</span>(msg);         </span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_">doCmd</span>(msg, <span class="variable language_">this</span>)) &#123;             </span><br><span class="line">msg = escapeHTML(msg);             </span><br><span class="line"><span class="keyword">if</span> (<span class="title class_">Game</span>.<span class="property">player</span> &amp;&amp; <span class="title class_">Game</span>.<span class="property">player</span>.<span class="property">word</span>.<span class="property">word</span> === msg) &#123;                 <span class="keyword">return</span>;             </span><br><span class="line">&#125;             </span><br><span class="line">io.<span class="title function_">emit</span>(<span class="string">&#x27;barrage&#x27;</span>, msg);          </span><br><span class="line">&#125;      </span><br><span class="line">&#125;);  </span><br><span class="line">&#125;); </span><br></pre></td></tr></table></figure></li></ul></li><li>UI等细节优化<br> 本部分代码逻辑较为简单，主要为UI布局及背景、音效添加等，此处不再叙。 </li><li>docker制作： <ul><li>下载 node 镜像 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull node </span><br></pre></td></tr></table></figure></li><li>添加 Dockerfile <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FROM node:latest #  将Dockerfile当前目录下所有文件拷贝至容器内项目目录并安装项目依赖 </span><br><span class="line">ADD . /app/ WORKDIR /app RUN npm install </span><br><span class="line"># 容器对外暴露的端口号，要和node项目配置的端口号一致 </span><br><span class="line">EXPOSE 4000 </span><br><span class="line"># 容器启动时执行的命令 </span><br><span class="line">CMD [ &quot;node&quot;, &quot;server/server.js&quot; ] </span><br></pre></td></tr></table></figure></li><li>构建dcoker镜像 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t draw_something . </span><br></pre></td></tr></table></figure></li><li>启动容器 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name drawsometing -p 80:4000 draw_someting </span><br></pre></td></tr></table></figure></li><li>测试：访问主机相应端口号 </li><li>上传docker镜像 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker tag 07 boneink/paint-someting </span><br><span class="line">docker push boneink/paint-someting</span><br></pre></td></tr></table></figure></li><li>Docker镜像项目地址 <a href="https://hub.docker.com/r/boneink/paint-someng">https://hub.docker.com/r/boneink/paint-someng</a><br>  或者通过命令获取镜像：  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull boneink/paint-someting </span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>Socket.IO. (2019). Socket.IO — Docs. [online] Available at: <a href="https://socket.io/docs/">https://socket.io/docs/</a> [Accessed 21 May 2019].<br>Yaseng.org. (2019). Jquery.barrager.js 专业的网页弹幕插件. [online] Available at: <a href="https://yaseng.org/jquery.barrager.js/">https://yaseng.org/jquery.barrager.js/</a> [Accessed 21 May 2019].<br>Docker Documentaon. (2019). Docker Documentaon. [online] Available at: <a href="https://docs.docker.com/">https://docs.docker.com/</a> [Accessed 21 May 2019].</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;项目名称&quot;&gt;&lt;a href=&quot;#项目名称&quot; class=&quot;headerlink&quot; title=&quot;项目名称&quot;&gt;&lt;/a&gt;项目名称&lt;/h3&gt;&lt;p&gt;  基于Socket.io通信的《你画我猜》docker镜像制作&lt;/p&gt;
&lt;h3 id=&quot;项目介绍&quot;&gt;&lt;a href=&quot;#项</summary>
      
    
    
    
    
    <category term="作业" scheme="https://boneink.github.io/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="云计算" scheme="https://boneink.github.io/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>云计算作业5</title>
    <link href="https://boneink.github.io/2019/05/20/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E4%BD%9C%E4%B8%9A5/"/>
    <id>https://boneink.github.io/2019/05/20/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E4%BD%9C%E4%B8%9A5/</id>
    <published>2019-05-20T04:00:00.000Z</published>
    <updated>2019-05-20T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Homework-5"><a href="#Homework-5" class="headerlink" title="Homework 5"></a>Homework 5</h2><hr><h3 id="Assignment"><a href="#Assignment" class="headerlink" title="Assignment"></a>Assignment</h3><h4 id="Storage-for-Data-Intensive-Services"><a href="#Storage-for-Data-Intensive-Services" class="headerlink" title="Storage for Data Intensive Services"></a>Storage for Data Intensive Services</h4><ol><li><p>HDFS is implemented as a user-level ﬁle system vs an in-kernel ﬁle-system. (a) What is the advantage of this in the context of Hadoop?</p><blockquote><p>HDFS (Hadoop Distributed File System) is a unique design that provides storage for extremely large ﬁles with streaming data access paern and it runs on commodity hardware. Here are some advantages:</p><ul><li><strong>Extremely large ﬁles</strong>: HDFS is sutable for data in range of petabytes(1000 TB).</li><li><strong>Streaming Data Access Paern</strong>: HDFS is designed on principle of write-once and read-many-mes. Once data is wrien large porons of dataset can be processed any number mes.</li><li><strong>Commodity hardware</strong>: Hardware that is inexpensive and easily available in the market. This is one of feature which specially disnguishes HDFS from other ﬁle system.</li></ul></blockquote></li><li><p>The output of a Mapper is wrien into the local ﬁlesystem instead of the global ﬁlesystem. Why? Your answer should explain both why wring into the global ﬁle system would be undesirable as well as why it would be of minimal beneﬁt.</p><blockquote><ol><li>Wring into the local ﬁlesystem reduces network traﬃc usage as the reducer may run on the same machine as the output so copying not required.</li><li>wring to hdfs is not like wring to local disk. It’s a more involved process with namenode assuring that at least dfs.replication.min copies are wrien to hdfs. And namenode will also run a background thread to make addional copies for under replicated blocks.Suppose, the user kills the job in between or jobs just fail. There will be lots of intermediate ﬁles sing on hdfs for no reason which you will have to delete manually. And if this process happens too many mes, your cluster’s perform and will degrade. Hdfs is opmized for appending and not frequent deleng .Also, during map phase , if the job fails, it performs a cleanup before exing. If it were hdfs, the deleon process would require namenode to send a block deleon message to appropriate datanodes, which will cause invalidaon of that block and it’s removal from blocksMap . So much operaon involved just for a failed cleanup and for no gain.</li></ol></blockquote></li><li><p>Why does Hadoop sort records en route to a Reducer? How would it aﬀect things if these records were processed by the Reducer in the order in which they were received from the various Mappers?</p><blockquote><p>Within a given paron, the intermediate key&#x2F;value pairs are processed in increasing key order. This ordering guarantee makes it easy to generate a sorted output ﬁle per paron, which is useful when the output ﬁle format needs to support eﬃcient random access lookups by key, or users of the output ﬁnd it convenient to have the data sorted. Without distribung by key, joining data in such a way would require painfully complex logic involving some kind of intermediary data storage &#x2F; caching.</p></blockquote></li><li><p>How is the failure of a Mapper or Reduce managed?</p><blockquote><ol><li>In case of a parcular task failure, Hadoop iniates another computaonal resource in order to perform failed map or reduce tasks.</li><li>By default, if any task fails four mes (or whatever you conﬁgure in those properes), the whole job would be considered as failed. In short shuffle and sort being a part of reducer, it would only iniate aempt to rerun reducer task. Map tasks would not be re-run as they are considered as completed.When it comes to failure of shuffle and sort process, it is basically a failure in the parcular node where reducer task has failed and it would be set to run afresh in another resource (btw, reducer phase begin with shuﬄe and sort process).</li></ol></blockquote></li><li><p>In a typical Map-Reduce graph algorithm, what data structure is used to represent the graph? Why?</p><blockquote><p>Map-Reduce graph algorithm represent the graph by valur-key ：</p><ol><li>Could quickly ﬁnd the data within the database.</li><li>Because oponal values are not represented by placeholders or input parameters, as in most RDBs, key-value databases oen use far less memory to store the same database, which can lead to large performance gains in certain workloads.</li><li>Supporng high concurrency</li></ol></blockquote></li><li><p>In a typical Map-Reduce graph algorithm, how many Map-Reduce phases are typically necessary before the graph can be traversed? Why?</p><blockquote><p>A MapReduce framework (or system) is usually composed of three operaons (or steps):<br><strong>Map</strong>: each worker node applies the map funcon to the local data, and writes the<br>output to a temporary storage. A master node ensures that only one copy of redundant input data is processed.<br><strong>Shuﬄe</strong>: worker nodes redistribute data based on the output keys (produced by the map funcon), such that all data belonging to one key is located on the same worker node.<br><strong>Reduce</strong>: worker nodes now process each group of output data, per key, in parallel.</p></blockquote></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Homework-5&quot;&gt;&lt;a href=&quot;#Homework-5&quot; class=&quot;headerlink&quot; title=&quot;Homework 5&quot;&gt;&lt;/a&gt;Homework 5&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;Assignment&quot;&gt;&lt;a href=&quot;#Assign</summary>
      
    
    
    
    
    <category term="作业" scheme="https://boneink.github.io/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="云计算" scheme="https://boneink.github.io/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>云计算实验7</title>
    <link href="https://boneink.github.io/2019/05/19/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C7/"/>
    <id>https://boneink.github.io/2019/05/19/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C7/</id>
    <published>2019-05-19T04:00:00.000Z</published>
    <updated>2019-05-19T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LAB-7"><a href="#LAB-7" class="headerlink" title="LAB 7"></a>LAB 7</h2><hr><h4 id="Name"><a href="#Name" class="headerlink" title="Name:"></a>Name:</h4><p> Introducon to Cloud Compung– Hadoop and MapReduce</p><h3 id="Target"><a href="#Target" class="headerlink" title="Target:"></a>Target:</h3><ul><li>Objecves: </li><li>Understanding the concept of MapReduce Model </li><li>Building a ﬁle system in a distributed way that store large data trunks </li><li>Merging all things together into a docker image </li><li>Wring some sample demo on running MapReduce models</li></ul><ol><li><p>Install Hadoop Docker image.</p><ul><li>Pull image. <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker pull sequenceiq/hadoop-docker:2.7.0</span> </span><br></pre></td></tr></table></figure><ul><li>Start a container. <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run -it sequenceiq/hadoop-docker:2.7.0 /etc/bootstrap.sh -bash</span> </span><br></pre></td></tr></table></figure></li><li>Test. <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> <span class="variable">$HADOOP_PREFIX</span></span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.0.jar grep</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bin/hdfs dfs -<span class="built_in">cat</span> output/*</span> </span><br></pre></td></tr></table></figure></li><li>Set to the root of your Java installaon</li></ul></li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vi etc/hadoop/hadoop-env.sh <span class="built_in">export</span> JAVA_HOME=/usr/java/latest</span> </span><br></pre></td></tr></table></figure></li><li><p>Test WordCount. </p><ul><li>Edit WordCount.java <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException; </span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer; </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration; </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path; </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable; </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text; </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job; </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper; </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer; </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat; </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat; </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WordCount</span> &#123; </span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">TokenizerMapper</span>        </span><br><span class="line">     <span class="keyword">extends</span> <span class="title class_">Mapper</span>&lt;Object, Text, Text, IntWritable&gt;&#123; </span><br><span class="line"> </span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">IntWritable</span> <span class="variable">one</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntWritable</span>(<span class="number">1</span>);     </span><br><span class="line">     <span class="keyword">private</span> <span class="type">Text</span> <span class="variable">word</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Text</span>(); </span><br><span class="line"></span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">map</span><span class="params">(Object key, Text value, Context context                     )</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;       </span><br><span class="line">         <span class="type">StringTokenizer</span> <span class="variable">itr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(value.toString());       </span><br><span class="line">         <span class="keyword">while</span> (itr.hasMoreTokens()) &#123;         </span><br><span class="line">             word.set(itr.nextToken());         </span><br><span class="line">             context.write(word, one);       </span><br><span class="line">         &#125;     </span><br><span class="line">     &#125;   </span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">IntSumReducer</span>        </span><br><span class="line">        <span class="keyword">extends</span> <span class="title class_">Reducer</span>&lt;Text,IntWritable,Text,IntWritable&gt; &#123;     </span><br><span class="line">        <span class="keyword">private</span> <span class="type">IntWritable</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntWritable</span>(); </span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values,                        Context context                        )</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;       </span><br><span class="line">            <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;       </span><br><span class="line">            <span class="keyword">for</span> (IntWritable val : values) &#123;         </span><br><span class="line">                sum += val.get();       </span><br><span class="line">            &#125;       </span><br><span class="line">            result.set(sum); </span><br><span class="line">   </span><br><span class="line">            context.write(key, result);     </span><br><span class="line">        &#125;   </span><br><span class="line">    &#125; </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;     </span><br><span class="line">        <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>(); </span><br><span class="line">        <span class="type">Job</span> <span class="variable">job</span> <span class="operator">=</span> Job.getInstance(conf, <span class="string">&quot;word count&quot;</span>);     </span><br><span class="line">        job.setJarByClass(WordCount.class);     </span><br><span class="line">        job.setMapperClass(TokenizerMapper.class);     </span><br><span class="line">        job.setCombinerClass(IntSumReducer.class);     </span><br><span class="line">        job.setReducerClass(IntSumReducer.class);     </span><br><span class="line">        job.setOutputKeyClass(Text.class);     </span><br><span class="line">        job.setOutputValueClass(IntWritable.class);     </span><br><span class="line">        FileInputFormat.addInputPath(job, <span class="keyword">new</span> <span class="title class_">Path</span>(args[<span class="number">0</span>]));     </span><br><span class="line">        FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> <span class="title class_">Path</span>(args[<span class="number">1</span>]));     </span><br><span class="line">        System.exit(job.waitForCompletion(<span class="literal">true</span>) ? <span class="number">0</span> : <span class="number">1</span>);   </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></li><li>Compile WordCount.java and create a jar: <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bin/hadoop com.sun.tools.javac.Main WordCount.java</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">jar cf wc.jar WordCount*.class</span> </span><br></pre></td></tr></table></figure></li><li>Creat input ﬁle folder and ﬁles . <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bin/hadoop dfs -<span class="built_in">mkdir</span> /hinput</span> </span><br></pre></td></tr></table></figure></li><li>Then the ﬁle01 and ﬁles02 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> hinput/file01 Hello World Bye World</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> hinput/file02 Hello Hadoop Goodbye Hadoop</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bin/hadoop dfs -put hinput/* /hinput</span> </span><br></pre></td></tr></table></figure></li><li>Run the applicaon <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bin/hadoop jar wc.jar WordCount /hinput output</span> </span><br></pre></td></tr></table></figure></li><li>Output <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bin/hadoop fs -<span class="built_in">cat</span> output/part-r-00000</span> </span><br></pre></td></tr></table></figure></li></ul></li><li><p>Test Map-Reduce Examples </p><ul><li>Run mongodb server <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run -p 27017:27017 -v /tmp/db:/data/db -d mongo</span> </span><br></pre></td></tr></table></figure></li><li>Run mongodb client <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run -it mongo mongo --host  192.168.85.161 --port 27017</span> </span><br></pre></td></tr></table></figure></li><li>Insert some datas. </li><li>Return the Total Price Per Customer<br>  Deﬁne the map funcon to process each input document:  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var mapFunction1 = function() &#123;                        emit(this.cust_id, this.price);                </span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure>  Deﬁne the corresponding reduce funcon with two arguments <code>keyCustId</code> and <code>valuesPrices</code> :  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var reduceFunction1 = function(keyCustId, valuesPrices) &#123;               return Array.sum(valuesPrices);           </span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure>  Perform the map-reduce on all documents in the <code>orders</code> collecon using the <code>mapFunction1</code> map funcon and the <code>reduceFunction1</code> reduce funcon.  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.orders.mapReduce(             </span><br><span class="line">mapFunction1,             </span><br><span class="line">reduceFunction1,             </span><br><span class="line">&#123; out: &quot;map_reduce_example&quot; &#125;           </span><br><span class="line">)</span><br></pre></td></tr></table></figure>  Result: </li><li>Calculate Order and Total Quanty with Average Quanty Per Item<br>  Deﬁne the map funcon to process each input document:  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var mapFunction2 = function() &#123;               </span><br><span class="line">for (var idx = 0; idx &lt; this.items.length; idx++) &#123;                 var key = this.items[idx].sku;                   </span><br><span class="line">var value = &#123;                                 </span><br><span class="line">count: 1,                                 </span><br><span class="line">qty: this.items[idx].qty                       </span><br><span class="line">&#125;;                   </span><br><span class="line">emit(key, value);               </span><br><span class="line">&#125;            </span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure>  Deﬁne the corresponding reduce funcon with two arguments <code>keySKU</code> and <code>countObjVals</code> :  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var reduceFunction2 = function(keySKU, countObjVals) &#123;   </span><br><span class="line">reducedVal = &#123; count: 0, qty: 0 &#125;; </span><br><span class="line">     for (var idx = 0; idx &lt; countObjVals.length; idx++) &#123;                 </span><br><span class="line">     reducedVal.count += countObjVals[idx].count;                 </span><br><span class="line">     reducedVal.qty += countObjVals[idx].qty;             &#125; </span><br><span class="line">     </span><br><span class="line">     return reducedVal;          </span><br><span class="line">     &#125;; </span><br></pre></td></tr></table></figure>  Deﬁne a ﬁnalize funcon with two arguments key and reducedVal .  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var finalizeFunction2 = function (key, reducedVal) &#123; </span><br><span class="line">              reducedVal.avg = reducedVal.qty/reducedVal.count; </span><br><span class="line">              return reducedVal; </span><br><span class="line">           &#125;; </span><br></pre></td></tr></table></figure>  Perform the map-reduce operaon on the <code>orders</code> collection using the <code>mapFunction2</code> , <code>reduceFunction2</code> , and <code>finalizeFunction2</code> funcons.  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">db.orders.mapReduce( mapFunction2,             reduceFunction2,             </span><br><span class="line">&#123;               </span><br><span class="line">out: &#123; merge: &quot;map_reduce_example&quot; &#125;,               </span><br><span class="line">query: &#123; ord_date:                          </span><br><span class="line">&#123; $gt: new Date(&#x27;01/01/2012&#x27;) </span><br><span class="line">&#125;                      </span><br><span class="line">&#125;,               </span><br><span class="line">finalize: finalizeFunction2             </span><br><span class="line">&#125;           </span><br><span class="line">) </span><br></pre></td></tr></table></figure>  Result：</li></ul></li></ol><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h3><p>Wiki.apache.org. (2019). FrontPage - Hadoop Wiki. [online] Available at: <a href="https://wiki.apache.org/hadoop">https://wiki.apache.org/hadoop</a> [Accessed 19 May 2019].<br>Hub.docker.com. (2019). Docker Hub. [online] Available at: <a href="https://hub.docker.com/r/sequenceiq/hadoop-docker">https://hub.docker.com/r/sequenceiq/hadoop-docker</a> [Accessed 19 May 2019].<br>Docs.mongodb.com. (2019). Map-Reduce Examples — MongoDB Manual. [online] Available at: <a href="https://docs.mongodb.com/manual/tutorial/map-reduce-examples/#calculate-order-and-total-quanty-with-averagequanty-per-item">https://docs.mongodb.com/manual/tutorial/map-reduce-examples/#calculate-order-and-total-quanty-with-averagequanty-per-item</a> [Accessed 19 May 2019].<br>Hadoop.apache.org. (2019). Apache Hadoop 2.9.2 – MapReduce Tutorial. [online] Available at: <a href="https://hadoop.apache.org/docs/stable/hadoop-mapreduce-client/hadoop-mapreduce-clientcore/MapReduceTutorial.html#Example:_WordCount_v1.0">https://hadoop.apache.org/docs/stable/hadoop-mapreduce-client/hadoop-mapreduce-clientcore/MapReduceTutorial.html#Example:_WordCount_v1.0</a> [Accessed 19 May 2019].<br>Hadoop.apache.org. (2019). Apache Hadoop 2.9.2 – Hadoop: Seng up a Single Node Cluster.. [online] Available at: <a href="https://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/SingleCluster.html">https://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/SingleCluster.html</a> [Accessed 19 May 2019].</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LAB-7&quot;&gt;&lt;a href=&quot;#LAB-7&quot; class=&quot;headerlink&quot; title=&quot;LAB 7&quot;&gt;&lt;/a&gt;LAB 7&lt;/h2&gt;&lt;hr&gt;
&lt;h4 id=&quot;Name&quot;&gt;&lt;a href=&quot;#Name&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    
    <category term="云计算" scheme="https://boneink.github.io/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    <category term="实验作业" scheme="https://boneink.github.io/tags/%E5%AE%9E%E9%AA%8C%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>云计算作业4</title>
    <link href="https://boneink.github.io/2019/05/13/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E4%BD%9C%E4%B8%9A4/"/>
    <id>https://boneink.github.io/2019/05/13/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E4%BD%9C%E4%B8%9A4/</id>
    <published>2019-05-13T04:00:00.000Z</published>
    <updated>2019-05-13T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Homework-4"><a href="#Homework-4" class="headerlink" title="Homework 4"></a>Homework 4</h2><hr><h2 id="Assignment"><a href="#Assignment" class="headerlink" title="Assignment"></a>Assignment</h2><h2 id="Messaging-in-Docker-images"><a href="#Messaging-in-Docker-images" class="headerlink" title="Messaging in Docker images"></a>Messaging in Docker images</h2><ol><li><p>Donwload the project code from git. hps:&#x2F;&#x2F;github.com&#x2F;UsamaAshraf&#x2F;microservices-using-rabbitmq</p></li><li><p>Unzip to get the ﬁle.</p></li><li><p>Launch The Microservices.</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker-compose up</span></span><br></pre></td></tr></table></figure></li><li><p>Check for 3 services.</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker ps</span></span><br></pre></td></tr></table></figure></li><li><p>Open two new terminals, SSH into the Python and Go containers using the respecve container names and start the servers:</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it microservicesusingrabbitmq_python-service_1 bash FLASK_APP=main.py python -m flask run — port 3000 — host 0.0.0.0</span><br><span class="line"></span><br><span class="line">docker exec -it microservicesusingrabbitmq_go-service_1 bash go run main.go</span><br></pre></td></tr></table></figure></li><li><p>Open a third terminal to send the POST request:</p><blockquote><p>Lost code</p></blockquote></li><li><p>MQ performance Test。<br>Run a script.</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#/bin/sh</span><br><span class="line">sum=1000000000</span><br><span class="line">i=0 while [ &quot;$i&quot; -le &quot;$sum&quot; ]</span><br><span class="line">do</span><br><span class="line">curl -d &quot;full_name=$i&quot; -X POST http://localhost:3000/users/1 i=$(($i+1))</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Homework-4&quot;&gt;&lt;a href=&quot;#Homework-4&quot; class=&quot;headerlink&quot; title=&quot;Homework 4&quot;&gt;&lt;/a&gt;Homework 4&lt;/h2&gt;&lt;hr&gt;
&lt;h2 id=&quot;Assignment&quot;&gt;&lt;a href=&quot;#Assign</summary>
      
    
    
    
    
    <category term="作业" scheme="https://boneink.github.io/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="云计算" scheme="https://boneink.github.io/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>云计算实验6</title>
    <link href="https://boneink.github.io/2019/05/12/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C6/"/>
    <id>https://boneink.github.io/2019/05/12/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C6/</id>
    <published>2019-05-12T04:00:00.000Z</published>
    <updated>2019-05-12T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LAB-6"><a href="#LAB-6" class="headerlink" title="LAB 6"></a>LAB 6</h2><hr><h4 id="Name"><a href="#Name" class="headerlink" title="Name:"></a>Name:</h4><p>  Introducon to Cloud Compung – Kfka</p><h3 id="Target"><a href="#Target" class="headerlink" title="Target:"></a>Target:</h3><ul><li>Objecves: </li><li>Understanding the concept of message passing </li><li>Trying to follow up the procedure of a message broker that handles message from many tenants </li><li>Repeang what others have done in the past sheds the light on your future</li></ul><ol><li>Install docker-compose by <code>pip</code> . <ul><li>Install ‘pip’ <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">apt install python-pip</span> </span><br></pre></td></tr></table></figure> Check version.<br> Add from pip._internal import main into gedit &#x2F;usr&#x2F;bin&#x2F;pip . <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo gedit /usr/bin/pip</span> </span><br></pre></td></tr></table></figure></li><li>Install docker-compose.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip install docker-compose</span> </span><br></pre></td></tr></table></figure>Check version.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker-compose version</span> </span><br></pre></td></tr></table></figure></li></ul></li><li>Geng started with Spark Streaming using Docker <ul><li>Start Docker VM <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker-machine create --driver virtualbox --virtualbox-memory 2048 dev</span> </span><br></pre></td></tr></table></figure></li><li>conﬁgure shell to work with Docker client <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">configure your shell to work with Docker client</span> </span><br></pre></td></tr></table></figure></li><li>Edit <code>docker-compose.yml</code> . <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">kafka:  </span><br><span class="line">image: antlypls/kafka-legacy  </span><br><span class="line">environment:  </span><br><span class="line">- KAFKA=localhost:9092  </span><br><span class="line">- ZOOKEEPER=localhost:2181  </span><br><span class="line">- expose:  </span><br><span class="line">- &quot;2181&quot;  </span><br><span class="line">- &quot;9092&quot;  </span><br><span class="line">spark:</span><br><span class="line">   image: antlypls/spark:1.5.1      </span><br><span class="line">   command: bash     </span><br><span class="line">   volumes: - ./target/scala-2.10:/app      </span><br><span class="line">   links: - kafka </span><br></pre></td></tr></table></figure></li><li>starts kaa and then spark and logs us into spark container shell <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker-compose run --<span class="built_in">rm</span> spark</span> </span><br></pre></td></tr></table></figure></li><li>Run some tools within kaa container . <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it $(docker-compose ps -q kafka) bash </span><br></pre></td></tr></table></figure></li></ul></li><li>Create a topic in kafka <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kafka-topics.sh --create --zookeeper <span class="variable">$ZOOKEEPER</span> --replication-factor 1 --part</span></span><br></pre></td></tr></table></figure><ul><li><p>Go back to spark container shell and run</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spark-submit \ --master yarn-client \ --class com.example.spark.DirectKafkaWordCount \ app/direct_kafka_word_count.jar kafka:9092 word-count </span><br></pre></td></tr></table></figure></li><li><p>Use following sengs for <code>log4j</code> .</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">log4j.rootCategory=INFO, console    </span><br><span class="line">log4j.appender.console=org.apache.log4j.ConsoleAppender </span><br><span class="line">log4j.appender.console.target=System.err </span><br><span class="line">log4j.appender.console.threshold=ERROR </span><br><span class="line">log4j.appender.console.layout=org.apache.log4j.PatternLayout </span><br><span class="line">log4j.appender.console.layout.ConversionPattern=%d&#123;yy/MM/dd HH:mm:ss&#125; %p %c&#123;1&#125;: %</span><br></pre></td></tr></table></figure></li><li><p>In shared app directory and run app like</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">spark-submit \  </span><br><span class="line">--master yarn-client \  </span><br><span class="line">--driver-java-options &quot;-Dlog4j.configuration=file:///app/log4j.properties&quot; \  </span><br><span class="line">--class com.example.spark.DirectKafkaWordCount \  </span><br><span class="line">app/direct_kafka_word_count.jar kafka:9092 word-count</span><br></pre></td></tr></table></figure></li><li><p>Run following in the kafka container</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-console-producer.sh --broker-list $KAFKA --topic word-count </span><br></pre></td></tr></table></figure></li><li><p>And for input like this:</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello World </span><br><span class="line">!!!</span><br></pre></td></tr></table></figure></li><li><p>You should see output from spark app like:</p></li></ul></li><li>Kaa - Stream Word Count demo <ul><li>Start the kaa server and zookeeper <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /kafka/docker/stream </span><br><span class="line">export COMPOSE_PROJECT_NAME=&quot;stream-demo&quot; </span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></li><li>Service status <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose ps </span><br></pre></td></tr></table></figure></li><li>Create the input topic <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Enter in the broker container and start bash docker-compose exec broker bash </span><br><span class="line"># Create the topic </span><br><span class="line">kafka-topics --create \   --zookeeper zookeeper:2181 \   --replication-factor 1 \   --partitions 1 \   --topic streams-plaintext-input</span><br></pre></td></tr></table></figure></li><li>Create the output topic. <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-topics --create \    --zookeeper zookeeper:2181 \    --replication-factor 1 \    --partitions 1 \    --topic streams-wordcount-output \    --config cleanup.policy=compact </span><br></pre></td></tr></table></figure></li><li>Describe them. <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-topics \     --zookeeper zookeeper:2181 \     --describe </span><br></pre></td></tr></table></figure></li><li>Pom full example.<br>Unfortunately, this is an invalid link.<br>Obviously, we cann’t connue the experiment.</li></ul></li></ol><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h3><p>Team, D. (2019). Top 10 Kaa Features | Why Apache Kaa Is So Popular - DataFlair. [online] DataFlair. Available at: hps:&#x2F;&#x2F;data-ﬂair.training&#x2F;blogs&#x2F;apache-kaa-features&#x2F; [Accessed 12 May 2019].<br>Plasnin, A. (2019). Geng started with Spark Streaming using Docker - Thoughts Resampled. [online] Blog.antlypls.com. Available at: hps:&#x2F;&#x2F;blog.antlypls.com&#x2F;blog&#x2F;2015&#x2F;10&#x2F;05&#x2F;geng-started-with-spark-streaming-using-docker&#x2F; [Accessed 12 May 2019].<br>Gerardnico.com. (2019). Kaa - Stream Word Count demo [Gerardnico]. [online] Available at: hps:&#x2F;&#x2F;gerardnico.com&#x2F;dit&#x2F;kaa&#x2F;stream_wordcount [Accessed 12 May 2019].</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LAB-6&quot;&gt;&lt;a href=&quot;#LAB-6&quot; class=&quot;headerlink&quot; title=&quot;LAB 6&quot;&gt;&lt;/a&gt;LAB 6&lt;/h2&gt;&lt;hr&gt;
&lt;h4 id=&quot;Name&quot;&gt;&lt;a href=&quot;#Name&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    
    <category term="云计算" scheme="https://boneink.github.io/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    <category term="实验作业" scheme="https://boneink.github.io/tags/%E5%AE%9E%E9%AA%8C%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>云计算实验5</title>
    <link href="https://boneink.github.io/2019/05/08/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C5/"/>
    <id>https://boneink.github.io/2019/05/08/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C5/</id>
    <published>2019-05-08T04:00:00.000Z</published>
    <updated>2019-05-08T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LAB-5"><a href="#LAB-5" class="headerlink" title="LAB 5"></a>LAB 5</h2><hr><h4 id="Name"><a href="#Name" class="headerlink" title="Name:"></a>Name:</h4><p>  Introducon to Cloud Compung– Load Balancing</p><h3 id="Target"><a href="#Target" class="headerlink" title="Target:"></a>Target:</h3><ul><li>Understanding the concept of load balancing </li><li>Monitor the ulizaon status of each VM and each host </li><li>Moving VMs from hot spot to cold ones </li><li>Complete this experiment using at least two computers, the more the beer</li></ul><ol><li>Test mongodb. <ul><li>Go to dockerhub and pull one image call mongo-express<br>Download mongo  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker pull mongo</span></span><br></pre></td></tr></table></figure>  Run mongodb server  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run -p 27017:27017 -v /tmp/db:/data/db -d mongo</span> </span><br></pre></td></tr></table></figure>  Run mongodb client  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run -it mongo mongo --host  192.168.85.148 --port 27017</span></span><br></pre></td></tr></table></figure>  Download monogo-express  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># docekr pull mongo-express </span><br></pre></td></tr></table></figure>  Test some simple SQL statements  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> use test </span><br><span class="line">switched <span class="keyword">to</span> db test </span><br><span class="line"><span class="operator">&gt;</span> db.foo.insert( &#123; x: <span class="number">1</span>, y: <span class="number">1</span> &#125; ) </span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : <span class="number">1</span> &#125;) </span><br><span class="line"><span class="operator">&gt;</span> <span class="keyword">show</span> collections </span><br><span class="line">foo </span><br></pre></td></tr></table></figure>  Run mongo-express  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -it --rm -p 8081:8081 --link ffb6a14e7657:mongo mongo-express </span><br></pre></td></tr></table></figure>  Visit <a href="http://localhost:8081/">http://localhost:8081/</a> by Mozilla Firfox.</li></ul></li><li>Test mongodb Web. <ul><li>Open remote connecon<br>Edit &#x2F;etc&#x2F;mongod.conf.orig in the docker<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apt-get update</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apt-get install vim</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vi /etc/mongod.conf.orig</span> </span><br></pre></td></tr></table></figure>Chang bindIp: 127.0.0.1 into bindIp: 0.0.0.0 . </li><li>Make mulple duplicates of the MongoDB service.</li></ul></li><li>Increase the load of hosts and balance load. <ul><li>Send lots of requests to hosts. </li><li>Set a threshold for such status and name it as the hotspot when it is over.Move some hosts to other machines when CPU unl &#x3D; 100%.<br> And then we can see that CPU unl is lower.</li></ul></li></ol><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h3><p>Docker Documentaon. (2019). Get Started, Part 1: Orientaon and setup. [online] Available at: <a href="https://docs.docker.com/getstarted/">https://docs.docker.com/getstarted/</a> [Accessed 5 Apr. 2019].<br>Golang.org. (2019). Geng Started - The Go Programming Language. [online] Available at: <a href="https://golang.org/doc/install#install">https://golang.org/doc/install#install</a> [Accessed 5 Apr. 2019]. Criu.org. (2019). Live migraon - CRIU. [online] Available at: <a href="https://criu.org/Live_migraon">https://criu.org/Live_migraon</a> [Accessed 21 Apr. 2019].<br>Criu.org. (2019). Docker - CRIU. [online] Available at: <a href="https://criu.org/Docker">https://criu.org/Docker</a> [Accessed 21 Apr. 2019].<br>GitHub. (2019). ZhuangweiKang&#x2F;Docker-CRIU-Live-Migraon. [online] Available at: <a href="https://github.com/ZhuangweiKang/Docker-CRIU-Live-Migraon?tdsourcetag=s_pcm_aiomsg">https://github.com/ZhuangweiKang/Docker-CRIU-Live-Migraon?tdsourcetag=s_pcm_aiomsg</a> [Accessed 21 Apr. 2019].<br>GitHub. (2019). Kong&#x2F;hpsnippet. [online] Available at: <a href="https://github.com/Kong/hpsnippet">https://github.com/Kong/hpsnippet</a> [Accessed 6 May 2019].<br>Hub.docker.com. (2019). Docker Hub. [online] Available at: <a href="https://hub.docker.com/_/mongo-express">https://hub.docker.com/_/mongo-express</a> [Accessed 6 May 2019].</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LAB-5&quot;&gt;&lt;a href=&quot;#LAB-5&quot; class=&quot;headerlink&quot; title=&quot;LAB 5&quot;&gt;&lt;/a&gt;LAB 5&lt;/h2&gt;&lt;hr&gt;
&lt;h4 id=&quot;Name&quot;&gt;&lt;a href=&quot;#Name&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    
    <category term="云计算" scheme="https://boneink.github.io/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    <category term="实验作业" scheme="https://boneink.github.io/tags/%E5%AE%9E%E9%AA%8C%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>云计算实验4</title>
    <link href="https://boneink.github.io/2019/04/27/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C4/"/>
    <id>https://boneink.github.io/2019/04/27/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C4/</id>
    <published>2019-04-27T04:00:00.000Z</published>
    <updated>2019-04-27T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LAB-4"><a href="#LAB-4" class="headerlink" title="LAB 4"></a>LAB 4</h2><hr><h4 id="Name"><a href="#Name" class="headerlink" title="Name:"></a>Name:</h4><p> Introducon to Cloud Compung– Live Migraon Massively</p><h3 id="Target"><a href="#Target" class="headerlink" title="Target:"></a>Target:</h3><ul><li>Understanding the basic techniques for VM migraon </li><li>Migrate containers to test your migraon skill </li><li>Understanding the concept of checkpoint and restore Successfully migrate mulple images either one by one or in a batch </li><li>Wring a decent report</li></ul><ol><li><p>Making shell script for checkpoints. </p><ul><li><p>Making golang script.</p>   <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main </span><br><span class="line"><span class="keyword">import</span> (<span class="string">&quot;fmt&quot;</span></span><br><span class="line">        <span class="string">&quot;time&quot;</span> ) </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;  </span><br><span class="line">    time1 := time.Now()  </span><br><span class="line">    <span class="keyword">for</span> <span class="literal">true</span> &#123;    </span><br><span class="line">        now := time.Now()    </span><br><span class="line">        time2 := now.Sub(time1)    <span class="comment">//formatNow := time2.Format(&quot;2006-01-02 15:04:05&quot;)    </span></span><br><span class="line">        fmt.Print(time2)    </span><br><span class="line">        fmt.Println(<span class="string">&quot; has passed&quot;</span>)   </span><br><span class="line">        time.Sleep(time.Duration(<span class="number">1</span>)*time.Second)  </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></li><li><p>Making Dockerﬁle</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FROM golang </span><br><span class="line">ADD example.go / </span><br><span class="line">CMD [&quot;go&quot;,&quot;run&quot;,&quot;/example.go&quot;] </span><br></pre></td></tr></table></figure></li><li><p>Making shell script.</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">v=$(docker build .) </span><br><span class="line">name1=$&#123;v:0-12&#125; </span><br><span class="line">sudo docker run --name 5901216110 $name1 &amp; </span><br><span class="line">sleep 5s </span><br><span class="line">id=$(docker ps | awk &#x27;NR &gt; 1 &#123;print $1; exit&#125;&#x27;) </span><br><span class="line">docker checkpoint create --checkpoint-dir=/home/boneink $id  checkpoint1 </span><br></pre></td></tr></table></figure></li></ul></li><li><p>Running shell script to make checkpoint. </p></li><li><p>Make script for restarng checkpoints. </p><ul><li><p>Make the script.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">i=0 </span><br><span class="line">while [[ $i &lt; 20 ]] </span><br><span class="line">do </span><br><span class="line">docker run -d --name zk-clone$1 --security-opt seccomp:unconfined golang </span><br><span class="line">docker start --checkpoints checkpoint1 --checkpoint-dir /home/boneink/chpk zk-clo </span><br><span class="line">done </span><br></pre></td></tr></table></figure></li><li><p>Scanning the containers. </p></li><li><p>Printing logs. </p></li><li><p>Then we can know how long it cost for migraon.</p></li></ul></li></ol><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h3><p>Docker Documentaon. (2019). Get Started, Part 1: Orientaon and setup. [online] Available at: <a href="https://docs.docker.com/getstarted/">https://docs.docker.com/getstarted/</a> [Accessed 5 Apr. 2019].<br>Golang.org. (2019). Geng Started - The Go Programming Language. [online] Available at: <a href="https://golang.org/doc/install#install">https://golang.org/doc/install#install</a> [Accessed 5 Apr. 2019].<br>Criu.org. (2019). Live migration - CRIU. [online] Available at: <a href="https://criu.org/Live_migraon">https://criu.org/Live_migraon</a> [Accessed 21 Apr. 2019]. Criu.org. (2019). Docker - CRIU. [online] Available at: <a href="https://criu.org/Docker">https://criu.org/Docker</a> [Accessed 21 Apr. 2019].<br>GitHub. (2019). ZhuangweiKang&#x2F;Docker-CRIU-Live-Migraon. [online] Available at: <a href="https://github.com/ZhuangweiKang/Docker-CRIU-Live-Migraon?tdsourcetag=s_pcm_aiomsg">https://github.com/ZhuangweiKang/Docker-CRIU-Live-Migraon?tdsourcetag=s_pcm_aiomsg</a> [Accessed 21 Apr. 2019].</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LAB-4&quot;&gt;&lt;a href=&quot;#LAB-4&quot; class=&quot;headerlink&quot; title=&quot;LAB 4&quot;&gt;&lt;/a&gt;LAB 4&lt;/h2&gt;&lt;hr&gt;
&lt;h4 id=&quot;Name&quot;&gt;&lt;a href=&quot;#Name&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    
    <category term="云计算" scheme="https://boneink.github.io/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    <category term="实验作业" scheme="https://boneink.github.io/tags/%E5%AE%9E%E9%AA%8C%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>云计算实验3</title>
    <link href="https://boneink.github.io/2019/04/21/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C3/"/>
    <id>https://boneink.github.io/2019/04/21/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C3/</id>
    <published>2019-04-21T04:00:00.000Z</published>
    <updated>2019-04-21T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LAB-3"><a href="#LAB-3" class="headerlink" title="LAB 3"></a>LAB 3</h2><hr><h4 id="Name"><a href="#Name" class="headerlink" title="Name:"></a>Name:</h4><p>  Introducon to Cloud Compung – Live Migraon</p><h3 id="Target"><a href="#Target" class="headerlink" title="Target:"></a>Target:</h3><ul><li>Understanding the basic techniques for VM migraon </li><li>Using docker container as an example to test your migraon skill </li><li>Understanding the concept of checkpoint and restore </li><li>Successfully migrate your image from one host to another </li><li>Wring a decent report</li></ul><ol><li><p>Conﬁgure NFS Downloading and Installing the Components</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get update</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get install nfs-kernel-server</span> </span><br></pre></td></tr></table></figure><ul><li><p>Conﬁguring the NFS Exports</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo nano /etc/exports  <span class="comment"># Add the below line to exports file:  /home  192.168.1.108(rw,sync,no_root_squash,no_subtree_check) # Then restart nfs-kernel-server service</span></span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl restart nfs-kernel-server</span> </span><br></pre></td></tr></table></figure></li><li><p>Adjusng the Firewall</p></li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">First, check firewall status</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo ufw status</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">If ufw is inactive, use the below <span class="built_in">command</span> to <span class="built_in">enable</span> ufw:</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo ufw <span class="built_in">enable</span></span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Make ufw allow incoming and outgoing: $ sudo ufw default allow incoming</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo ufw default allow outgoing</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Make client server can access host server</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo ufw allow from 192.168.1.108 to any port nfs</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Check ufw status</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo ufw status numbered</span> </span><br></pre></td></tr></table></figure></li><li><p>Downloading and Installing Docker &amp; CRIU on Both Servers </p><ul><li><p>Installing Docker-ce 17.03 through package<br>Add the following code as content:</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wget https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/do</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo dpkg -i /path/to/package.deb</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Daemon environment will run automaticly</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Run docker without sudo</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo groupadd docker</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo usermod -aG docker <span class="variable">$USER</span></span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker checkpoint is an experimental feature, so you should <span class="built_in">enable</span> docker exper</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo nano /etc/docker/daemon.json</span> </span><br></pre></td></tr></table></figure></li><li><p>Add the following code as content:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;experimental&quot;:true </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></li><li><p>Check whether experimental feature has been enabled:  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ docker version </span><br><span class="line">Install CRIU 3.7</span><br><span class="line">$ sudo apt-get update &amp;&amp; sudo apt-get install -y protobuf-c-compiler libprotobuf</span><br><span class="line">$ git clone https://github.com/xemul/criu criu </span><br><span class="line">$ cd criu </span><br><span class="line">$ sudo make clean </span><br><span class="line">$ sudo make  </span><br><span class="line">$ sudo make install </span><br><span class="line"># Then check if your criu works well </span><br><span class="line">$ sudo criu check </span><br><span class="line">$ sudo criu check --all # You will see &#x27;looks good&#x27; </span><br></pre></td></tr></table></figure></li><li><p>Test your live migraon There is the GO program.</p>   <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main </span><br><span class="line"><span class="keyword">import</span> (<span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span>  </span><br><span class="line">) </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123; </span><br><span class="line">time1 := time.Now() </span><br><span class="line"><span class="keyword">for</span> <span class="literal">true</span> &#123;</span><br><span class="line">now := time.Now()   </span><br><span class="line">time2 := now.Sub(time1)   <span class="comment">//formatNow := time2.Format(&quot;2006-01-02 15:04:05&quot;)   </span></span><br><span class="line">fmt.Print(time2)   </span><br><span class="line">fmt.Println(<span class="string">&quot; has passed&quot;</span>)   </span><br><span class="line">time.Sleep(time.Duration(<span class="number">2</span>)*time.Second) &#125; &#125; </span><br></pre></td></tr></table></figure>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run -d --name zk5901216110 --security-opt seccomp:unconfined busybox \      /bin/sh -c <span class="string">&#x27;i=0; while true; do echo $i; i=$(expr $i + 1); sleep 1; done&#x27;</span></span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">wait</span> a few seconds to give the container an opportunity to <span class="built_in">print</span> a few lines, t</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker checkpoint create --checkpoint-dir=/home/ubuntu/Container-Checkpoints/ l</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">check your container &amp; <span class="built_in">print</span> <span class="built_in">log</span> file</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker ps</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker logs zk5901216110</span> </span><br></pre></td></tr></table></figure></li><li><p>On the client</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker create --name looper-clone --security-opt seccomp:unconfined busybox \    /bin/sh -c &#x27;i=0; while true; do echo $i; i=$(expr $i + 1); sleep 1; done&#x27; </span><br><span class="line">$ docker start --checkpoint-dir=/nfs/home/ubuntu/Container-Checkpoints/ --checkpoint</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> # check your container </span><br><span class="line">$ docekr ps </span><br><span class="line">   $ docker logs looper-clone </span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h3><p>Docker Documentaon. (2019). Get Started, Part 1: Orientaon and setup. [online] Available at: hps:&#x2F;&#x2F;docs.docker.com&#x2F;getstarted&#x2F; [Accessed 5 Apr. 2019].<br>Golang.org. (2019). Geng Started - The Go Programming Language. [online] Available at: hps:&#x2F;&#x2F;golang.org&#x2F;doc&#x2F;install#install [Accessed 5 Apr. 2019].<br>Criu.org. (2019). Live migraon - CRIU. [online] Available at: hps:&#x2F;&#x2F;criu.org&#x2F;Live_migraon [Accessed 21 Apr. 2019].<br>Criu.org. (2019). Docker - CRIU. [online] Available at: hps:&#x2F;&#x2F;criu.org&#x2F;Docker [Accessed 21 Apr. 2019].<br>GitHub. (2019). ZhuangweiKang&#x2F;Docker-CRIU-Live-Migraon. [online] Available at: hps:&#x2F;&#x2F;github.com&#x2F;ZhuangweiKang&#x2F;Docker-CRIU-Live-Migraon?tdsourcetag&#x3D;s_pcm_aiomsg [Accessed 21 Apr. 2019].</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LAB-3&quot;&gt;&lt;a href=&quot;#LAB-3&quot; class=&quot;headerlink&quot; title=&quot;LAB 3&quot;&gt;&lt;/a&gt;LAB 3&lt;/h2&gt;&lt;hr&gt;
&lt;h4 id=&quot;Name&quot;&gt;&lt;a href=&quot;#Name&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    
    <category term="云计算" scheme="https://boneink.github.io/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    <category term="实验作业" scheme="https://boneink.github.io/tags/%E5%AE%9E%E9%AA%8C%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>云计算作业3</title>
    <link href="https://boneink.github.io/2019/04/15/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E4%BD%9C%E4%B8%9A3/"/>
    <id>https://boneink.github.io/2019/04/15/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E4%BD%9C%E4%B8%9A3/</id>
    <published>2019-04-15T04:00:00.000Z</published>
    <updated>2019-04-15T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Homework-3"><a href="#Homework-3" class="headerlink" title="Homework 3"></a>Homework 3</h2><hr><h3 id="Q1-Write-a-hypercall-in-KVM"><a href="#Q1-Write-a-hypercall-in-KVM" class="headerlink" title="Q1:Write a hypercall in KVM"></a>Q1:Write a hypercall in KVM</h3><p>A hypercall is a way for a guest OS to make a call to the hypervisor, in some ways similar to how a system call allows an applicaon to make a call to the OS. We are asking you to write a hypercall to become familiar with how they work and the codebase for KVM. For this part of the assignment, you will also set up your VM so you can use it for your hypercall development.<br>The hypercall you write should take one argument and output the informaon about virtual CPU in KVM. Modern architectures provide special support for virtualizaon and add a privileged instrucon for hypercalls, which you will use in this part of the assignment. Rather than using the default kernel that comes with Ubuntu 14.04.5, you should download and build a more recent version of the Linux kernel, kernel version 4.10, and install that in your VM. It will be this updated version of the kernel&#x2F;KVM source that you will modify to implement your hypercall.  </p><h3 id="Q2-Test-your-new-hypercall"><a href="#Q2-Test-your-new-hypercall" class="headerlink" title="Q2: Test your new hypercall"></a>Q2: Test your new hypercall</h3><p>To test your new hypercall, you will install your modiﬁcaons in the guest kernel running in your nested VM for tesng. As menoned earlier, the instrucon that iniates a hypercall is a privileged instrucon and cannot be executed in user mode. To test the hypercall from user space, you need to add a new system call in your guest kernel which in turn calls to the vcpu_info. The prototype of the system call can be deﬁned as the following.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int sys_vcpu_info(void);</span><br></pre></td></tr></table></figure><h3 id="Answer"><a href="#Answer" class="headerlink" title="Answer:"></a>Answer:</h3><ol><li>Download the Linux v4.10 mainline kernel source<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/torvalds/linux.git -b v4.10</span></span><br></pre></td></tr></table></figure></li><li>In the Linux source directory, copy the ubuntu conﬁg to kernel source<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> /boot/config-<span class="comment">#YOUR_UBUNTU_VERSION .config</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">yes</span> <span class="string">&quot;&quot;</span> | make oldconfig</span></span><br></pre></td></tr></table></figure></li><li>Install proper packages for the kernel compile.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get install libssl-dev bc libncurses-dev</span></span><br></pre></td></tr></table></figure></li><li>Run the following command to conﬁgure kernel.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make menuconfig</span></span><br></pre></td></tr></table></figure>To enable race in your KVM host, go to <code>Kernel Hacking</code> and select <code>Tracers</code> . Then enter <code>Tracers</code> , select both <code>Kernel Function Tracer</code> and <code>Kernel Function Graph Tracer</code> . Finally, save the conﬁg and exit.</li><li>Add system call.<br>Add <code>int sys_vcpu_info(void)</code> into <code>sys.c</code> :<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">asmlinkage int sys_vcpu_info(void)&#123;</span><br><span class="line">   char id[30];</span><br><span class="line">   unsigned   long   s1,s2,s3,s4;</span><br><span class="line">   char   sel;         </span><br><span class="line">   asm volatile         </span><br><span class="line">   ( &quot;movl $0x01 , %%eax ; \n\t&quot;      </span><br><span class="line">   &quot;xorl %%edx , %%edx ;\n\t&quot;      </span><br><span class="line">   &quot;cpuid ;\n\t&quot;       </span><br><span class="line">   &quot;movl %%edx ,%0 ;\n\t&quot;      </span><br><span class="line">   &quot;movl %%eax ,%1 ; \n\t&quot;      </span><br><span class="line">   :&quot;=m&quot;(s1),&quot;=m&quot;(s2)      );            </span><br><span class="line">   //printf(&quot;%08X-%08X-&quot;,s1,s2);      </span><br><span class="line">   asm volatile         </span><br><span class="line">   (&quot;movl $0x03,%%eax ;\n\t&quot;      </span><br><span class="line">   &quot;xorl %%ecx,%%ecx ;\n\t&quot;      </span><br><span class="line">   &quot;xorl %%edx,%%edx ;\n\t&quot;   </span><br><span class="line">   &quot;cpuid ;\n\t&quot;      </span><br><span class="line">   &quot;movl %%edx,%0 ;\n\t&quot;      </span><br><span class="line">   &quot;movl %%ecx,%1 ;\n\t&quot;      </span><br><span class="line">   :&quot;=m&quot;(s3),&quot;=m&quot;(s4)      );         </span><br><span class="line">   vcpu_info(id);    </span><br><span class="line">   return id;     </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>Add declaraon in syscalls.h .<br>Add ID for system calling:<br>In guest kernel source code, add the system call that calls the hypercall and Implement the syscall to call the hypercall. Then in host kernel source code, deﬁne the hypercall number (include&#x2F;uapi&#x2F;linux&#x2F;kvm_para.h) and print “Hello World” as the hypercall code (arch&#x2F;x86&#x2F;kvm&#x2F;x86.c)   </li><li>Aer you add your hypercall to your Linux&#x2F;KVM source, use the following command to compile the kernel.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make -j8</span></span><br></pre></td></tr></table></figure></li><li>Finally, use the following command to install the new kernel to your system. The new kernel will be loaded in the next boot.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make modules_install</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make install</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Homework-3&quot;&gt;&lt;a href=&quot;#Homework-3&quot; class=&quot;headerlink&quot; title=&quot;Homework 3&quot;&gt;&lt;/a&gt;Homework 3&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;Q1-Write-a-hypercall-in-KVM&quot;</summary>
      
    
    
    
    
    <category term="作业" scheme="https://boneink.github.io/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="云计算" scheme="https://boneink.github.io/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>云计算实验2</title>
    <link href="https://boneink.github.io/2019/04/14/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C2/"/>
    <id>https://boneink.github.io/2019/04/14/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C2/</id>
    <published>2019-04-14T04:00:00.000Z</published>
    <updated>2019-04-14T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LAB-2"><a href="#LAB-2" class="headerlink" title="LAB 2"></a>LAB 2</h2><hr><h4 id="Name"><a href="#Name" class="headerlink" title="Name:"></a>Name:</h4><p>  Introducon to Cloud Compung – Basic Interface and Programming</p><h3 id="Target"><a href="#Target" class="headerlink" title="Target:"></a>Target:</h3><p> Objecves: </p><ul><li>To write shell scripts to solve problems </li><li>To implement some standard Linux-kernel ulies such as ls,cp,etc using system calls. </li><li>Understanding the idea of mul-programming (or mulplexing) and threading </li><li>Learn to read an English poem Learn to read instrucons, carefully </li><li>Write a decent report</li></ul><ol><li><p>Write a Shell script that accepts a ﬁlename, starng and ending line numbers as arguments and displays all the lines between the given line numbers.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span> </span><br><span class="line">echo &quot;enter the filename&quot;   </span><br><span class="line">read fname   </span><br><span class="line">echo &quot;enter the starting line number&quot;   </span><br><span class="line">read s   </span><br><span class="line">echo &quot;enter the ending line number&quot;   </span><br><span class="line">read n   </span><br><span class="line">sed -n $s,$n\p $fname | cat &gt; newline         </span><br><span class="line">cat newline </span><br></pre></td></tr></table></figure></li><li><p>Write a Shell script that deletes all lines containing a speciﬁed word in one or more ﬁles supplied as arguments to it.</p></li></ol>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash </span><br><span class="line">if [ $# -eq 0 ] </span><br><span class="line">then </span><br><span class="line">echo &quot;Please enter one or more filenames as argument&quot; </span><br><span class="line">exit </span><br><span class="line">fi </span><br><span class="line">echo &quot;Enter the word to be searched in files&quot; </span><br><span class="line">read word </span><br><span class="line">for file in $* </span><br><span class="line">do </span><br><span class="line">sed &quot;/$word/d&quot; $file | tee tmp </span><br><span class="line">mv tmp $file </span><br><span class="line">done </span><br></pre></td></tr></table></figure><ol start="3"><li><p>Write a Shell script that displays list of all the ﬁles in the current directory to which the user has read, Write and execute permissions.</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash </span><br><span class="line">echo &quot;The list of File Names in the curent directory.&quot; </span><br><span class="line">echo &quot;Which have Read,Write and Execute permisions. &quot; </span><br><span class="line">for file in * </span><br><span class="line">do if [ -f $file ] </span><br><span class="line">then </span><br><span class="line">if [ -r $file -a -w $file -a -x $file ] </span><br><span class="line">then </span><br><span class="line">ls -l $file </span><br><span class="line">fi </span><br><span class="line">fi </span><br><span class="line">done </span><br></pre></td></tr></table></figure></li><li><p>Write a Shell script that receives any number of ﬁle names as arguments checks if every argument supplied is a ﬁle or a directory and reports accordingly. Whenever the argument is a ﬁle, the number of lines on it is also reported.</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash </span><br><span class="line">for x in $* </span><br><span class="line">do if [ -f $x ] </span><br><span class="line">then </span><br><span class="line">echo &quot; $x is  a file &quot; </span><br><span class="line">echo &quot; num of lines in the file are &quot; </span><br><span class="line">wc -l $x </span><br><span class="line">elif [ -d $x ] </span><br><span class="line">then </span><br><span class="line">echo &quot; $x is  a directory &quot; </span><br><span class="line">else echo &quot; enter valid filename or directory name &quot; </span><br><span class="line">fi </span><br><span class="line">done </span><br></pre></td></tr></table></figure></li><li><p>Write a Shell script that accepts a list of ﬁle names as its arguments, counts and reports the occurrence of each word that is present in the ﬁrst argument ﬁle on other argument ﬁles.</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash </span><br><span class="line">if [ $# -ne 2 ] </span><br><span class="line">then </span><br><span class="line">echo &quot;Error :invalid no of arguments &quot; </span><br><span class="line">exit </span><br><span class="line">fi </span><br><span class="line">str=`cat $1 | tr &#x27;\n&#x27; &#x27; &#x27;` </span><br><span class="line">for a in $str </span><br><span class="line">do </span><br><span class="line">echo &quot;word=$a , count=`grep -c &quot;$a&quot; $2` &quot; </span><br><span class="line">done </span><br></pre></td></tr></table></figure></li><li><p>Write a Shell script to list all of the directory ﬁles in a directory.</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash </span><br><span class="line">echo &quot;enter directory name&quot;   </span><br><span class="line">read dir   </span><br><span class="line">if [ -d $dir ]   </span><br><span class="line">then   </span><br><span class="line">echo &quot;list of files in the directory&quot;   </span><br><span class="line">ls $dir   </span><br><span class="line">else    </span><br><span class="line">echo &quot;enter proper directory name&quot;          </span><br><span class="line">fi  </span><br></pre></td></tr></table></figure></li><li><p>Write a Shell script to ﬁnd factorial of a given integer.</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">!/bin/bash </span><br><span class="line">echo &quot;Enter a number&quot; </span><br><span class="line">read num </span><br><span class="line"></span><br><span class="line">fact=1 </span><br><span class="line">while [ $num -gt 1 ] </span><br><span class="line">do   </span><br><span class="line">fact=$((fact * num))  #fact = fact * num   </span><br><span class="line">num=$((num - 1))      #num = num - 1 </span><br><span class="line">done </span><br><span class="line"></span><br><span class="line">echo $fact </span><br></pre></td></tr></table></figure></li></ol><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h3><p>Devhints.io cheatsheets. (2019). Bash scripng cheatsheet. [online] Available at: <a href="https://devhints.io/bash">https://devhints.io/bash</a> [Accessed 14 Apr. 2019].  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LAB-2&quot;&gt;&lt;a href=&quot;#LAB-2&quot; class=&quot;headerlink&quot; title=&quot;LAB 2&quot;&gt;&lt;/a&gt;LAB 2&lt;/h2&gt;&lt;hr&gt;
&lt;h4 id=&quot;Name&quot;&gt;&lt;a href=&quot;#Name&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    
    <category term="云计算" scheme="https://boneink.github.io/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    <category term="实验作业" scheme="https://boneink.github.io/tags/%E5%AE%9E%E9%AA%8C%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>云计算实验1</title>
    <link href="https://boneink.github.io/2019/04/06/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C1/"/>
    <id>https://boneink.github.io/2019/04/06/%E4%BA%91%E8%AE%A1%E7%AE%97%20%E5%AE%9E%E9%AA%8C1/</id>
    <published>2019-04-06T04:00:00.000Z</published>
    <updated>2019-04-06T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LAB-1"><a href="#LAB-1" class="headerlink" title="LAB 1"></a>LAB 1</h2><hr><h4 id="Name"><a href="#Name" class="headerlink" title="Name:"></a>Name:</h4><p> Introducon to Cloud Compung – Virtualized Services.</p><h3 id="Target"><a href="#Target" class="headerlink" title="Target:"></a>Target:</h3><p> Successfully install a Linux system with all basic capabilies.</p><p>Create your own user, and make it into sudoer list Provide your own way to implement sudo group privilege The more the beer We will start to build an IaaS service system, called Docker, and we will establish services from your system in the following classes Go through the process of building a solid docker service running on your laptop or your virualized devices Help Links: hps:&#x2F;&#x2F;docs.docker.com&#x2F;get-started&#x2F; Objecve: ﬁnish the Docker Service inializaon This is a basic Docker Service inializaon process Test it and run it in your own plaorm Find your liked image from docker hub My favorite would be golang image, ﬁnd it and deploy it Run a simple Golang hello world from this image<br>In your lab report, provide your input during the whole process</p><ol><li>Create a user.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> adduser <span class="comment">#username</span></span></span><br></pre></td></tr></table></figure></li><li>Implement sudo group privilege. Open <code>/ext/sudoers</code>.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">visudo</span></span><br></pre></td></tr></table></figure>Add username under <code># User privilege speciﬁcaon</code>.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">User privilege specification  root      ALL=(ALL:ALL) ALL  boneink ALL=(ALL:ALL) ALL</span></span><br></pre></td></tr></table></figure></li><li>Set up Docker environment(Install using the repository).<ul><li>SET UP THE REPOSITORY Update the <code>apt</code> package index: <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get update</span></span><br></pre></td></tr></table></figure> Install packages to allow apt to use a repository over HTTPS: <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get install \ </span>       </span><br><span class="line">apt-transport-https \        </span><br><span class="line">ca-certificates \        </span><br><span class="line">curl \       </span><br><span class="line">gnupg-agent \        </span><br><span class="line">software-properties-common</span><br></pre></td></tr></table></figure> There are some errors. Correct it by: <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo dpkg --configure -a</span></span><br></pre></td></tr></table></figure> Then it’s OK.<ul><li>Add Docker’s oﬃcial GPG key:<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span></span><br></pre></td></tr></table></figure> Verify that you now have the key with the ﬁngerprint <code>9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88</code> , by searching for the last 8 characters of the ﬁngerprint. <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-key fingerprint 0EBFCD88</span></span><br></pre></td></tr></table></figure></li><li>set up the stable repository.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo add-apt-repository \        <span class="string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \       <span class="subst">$(lsb_release -cs)</span> \        stable&quot;</span></span>  </span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li>Install DOCKER CE.<ul><li>Update the apt package index. <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get update</span></span><br></pre></td></tr></table></figure></li><li>Install the latest version of Docker CE and containerd. <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get install docker-ce docker-ce-cli containerd.io</span></span><br></pre></td></tr></table></figure></li></ul></li><li>Test Docker. Test Docker version.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker --version</span></span><br></pre></td></tr></table></figure>Test Docker installaon.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo docker run hello-world</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo docker image <span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo docker container <span class="built_in">ls</span> --all</span></span><br></pre></td></tr></table></figure></li><li>Deploy golang image.<hr> I’d like to deploy java image ﬁrstly unll I found that the image has been actually deprecated two years ago. So I choosed golang instead, and I got the method from <a href="https://golang.org/doc/install#install">https://golang.org/doc/install#install</a><hr><ul><li>Download the archiveand extract it into <code>/usr/local</code> , creang a Go tree in <code>/usr/local/go</code> . It’s beer to put the archive under home .<br> Using sudo to run the following command: <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo tar -C /usr/local -xzf go1.12.1.linux-amd64.tar.gz</span></span><br></pre></td></tr></table></figure></li><li>Add <code>/usr/local/go/bin</code> to the PATH environment variable. <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/local/go/bin</span></span><br></pre></td></tr></table></figure></li></ul></li><li>Run a simple Golang hello world from this image<ul><li>Create a work ﬁle for Golang.</li><li>Create hello-world.go and change its permission.</li><li>Edit the program. <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main  </span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span>     </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;        </span><br><span class="line">  fmt.Printf(<span class="string">&quot;hello world\n&quot;</span>)  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Run the program. <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go run hello-world.go</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><hr><p>It’s a new way to edit and run a program in a containers based on Docker, which is lightweight. It can package an applicaon and its dependencies in a virtual container that can run on any Linux server. So the Container cloud based on Docker can play an important role in Cloud Compung.</p><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h4><p>Docker Documentaon. (2019). Get Started, Part 1: Orientaon and setup. [online] Available at: hps:&#x2F;&#x2F;docs.docker.com&#x2F;getstarted&#x2F; [Accessed 5 Apr. 2019].   Golang.org. (2019). Geng Started - The Go Programming Language. [online] Available at: hps:&#x2F;&#x2F;golang.org&#x2F;doc&#x2F;install#install [Accessed 5 Apr. 2019].</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LAB-1&quot;&gt;&lt;a href=&quot;#LAB-1&quot; class=&quot;headerlink&quot; title=&quot;LAB 1&quot;&gt;&lt;/a&gt;LAB 1&lt;/h2&gt;&lt;hr&gt;
&lt;h4 id=&quot;Name&quot;&gt;&lt;a href=&quot;#Name&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    
    <category term="云计算" scheme="https://boneink.github.io/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    <category term="实验作业" scheme="https://boneink.github.io/tags/%E5%AE%9E%E9%AA%8C%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
</feed>
